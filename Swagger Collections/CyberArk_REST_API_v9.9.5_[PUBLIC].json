{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "CyberArk REST API v10 [PUBLIC]",
    "description": "All available requests in CyberArk Privileged Account Security Web Services v10.1\n\n# THIS IS UNOFFICIAL DOCUMENTATION\n\nhttps://git.joeco.de/CyberArk-RESTAPI/\n\n## Getting Started Guide\n\n[Getting Started with REST Using Postman](https://github.com/infamousjoeg/CyberArk-RESTAPI/blob/master/Getting%20Started%20with%20REST%20Using%20Postman.pdf) (PDF)\n\n## Status Codes\n\n* **Success [200]** The request succeeded. The actual response will depend on the request method used.\n* **Created [201]** The request was fulfilled and resulted in a new resource being created.\n* **Bad Request [400]** The request could not be understood by the server due to incorrect syntax.\n* **Unauthorized [401]** The request requires user authentication.\n* **Forbidden [403]** The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated.\n* **Not Found [404]** The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent.\n* **Conflict [409]** The request could not be completed due to a conflict with the current state of the resource.\n* **Internal Server Error [500]** The server encountered an unexpected condition which prevented it from fulfilling the request.\n\n# Whats New?\n\nThe following web services are now available:\n\n## Manage accounts\n\nDetermine how the CPM resets a password. You can initiate a password change process and specify the credentials for the CPM to use, or initiate a password change process in the account stored in the Vault but not in the corresponding account on the\ntarget machine.\n\n* Change Credentials and Set Next Password\n* Change Credentials in the Vault\n\n## Password retrieval\n\nRetrieve the password or SSH key of an existing account that is identified by its Account ID, and specify a reason and ticket ID, if required. This method can be used from v10 and replaces the Get Account Value method.\n\n* Get Password Value\n\n## Manage live sessions\n\nTerminate live sessions using a REST API\n\n* Terminate Live Session\n\n## System Health\n\nGet details of a specific component's current health in-depth or get a full summary of every component installed and configured.\n\n* System Details\n* System Summary\n\n_NOTE: If you are having issues with DEL or PUT methods, make sure that your Password Vault Web Access (PVWA) Server's IIS instance does not include WebDav Publishing.  This will cause known issues._"
  },
  "host": "example.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/API/AccountGroups/": {
      "post": {
        "description": "This method enables application managers to define a new account group automatically, and manage accounts as part of a group.\n\nTo create an account group, users require the following permissions in the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders\n\n**Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**",
        "summary": "Add Account Group",
        "tags": [
          "Account Groups [v9.9.5+]"
        ],
        "operationId": "APIAccountGroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAccountGrouprequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/API/AccountGroups/",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"GroupName\":\"{{GroupName}}\",\"GroupPlatform\":\"{{PlatformID}}\",\"Safe\":\"{{Safe}}\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Account Group",
            "x-testDescription": "This method enables application managers to define a new account group automatically, and manage accounts as part of a group.\n\nTo create an account group, users require the following permissions in the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders\n\n**Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/API/AccountGroups/{GroupName}/Members": {
      "post": {
        "description": "This method adds an account as a member to an existing account group.  The account can contain either a password or SSH key.  All members of an account group must be stored in the same Safe as the group itself.\n\nTo add an account as a member to an account group, users require the following permissions to the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n\n**Note:** _The following characters are not support in URL values in the Body:_ **+ & % #**",
        "summary": "Add Account to Account Group",
        "tags": [
          "Account Groups [v9.9.5+]"
        ],
        "operationId": "APIAccountGroupsMembersByGroupNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAccountToAccountGrouprequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/AccountGroups": {
      "get": {
        "description": "This method returns all the account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders",
        "summary": "Get Account Group by Safe [v9.10+]",
        "tags": [
          "Account Groups [v9.9.5+]"
        ],
        "operationId": "PasswordVaultAPIAccountGroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Safe",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/AccountGroups?Safe={{Safe}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Account Group by Safe [v9.10+]",
            "x-testDescription": "This method returns all the account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/AccountGroups/{GroupName}/Members": {
      "get": {
        "description": "This method returns all the members of an existing account group. These accounts can be either password accounts or SSH Key accounts.\n\n__NOTE: All members of account groups must be stored in the same Safe as the group itself.__\n\nThe user performing this task must have the following permissions in the Safe:\n\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders",
        "summary": "Get Account Group Members [v9.10+]",
        "tags": [
          "Account Groups [v9.9.5+]"
        ],
        "operationId": "PasswordVaultAPIAccountGroupsMembersByGroupNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/AccountGroups/{GroupName}/Members/{AccountID}": {
      "delete": {
        "description": "This method removes an account member from an account group. This account can be either a password account or an SSH Key account.\r\n\r\nThe user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders",
        "summary": "Delete Member from Account Group [v9.10+]",
        "tags": [
          "Account Groups [v9.9.5+]"
        ],
        "operationId": "PasswordVaultAPIAccountGroupsMembersByGroupNameAndAccountIDDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Account/{ACLAddress}|{ACLUserName}|{ACLPolicyID}/PrivilegedCommands": {
      "get": {
        "description": "This method gets a list of the privileged commands (OPM rules) associated with this account.",
        "summary": "List Account/ACL",
        "tags": [
          "Account/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountAPIAPIACLPolicyIDPrivilegedCommandsByACLAddressAndACLUserNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLAddress",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLUserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500InternalServerError(acladdressRequired)"
            },
            "examples": {
              "application/json": {
                "ErrorCode": "CAWS00001E",
                "ErrorMessage": "Input parameter AccountAddress is obligatory. Please fix it and try again."
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "This method adds a new privileged command rule to the account.",
        "summary": "Add Account/ACL",
        "tags": [
          "Account/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountAPIAPIACLPolicyIDPrivilegedCommandsByACLAddressAndACLUserNamePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAccount~1aclrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLAddress",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLUserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes privileged commands rules associated with the account.",
        "summary": "Delete Account/ACL",
        "tags": [
          "Account/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountAPIAPIACLPolicyIDPrivilegedCommandsByACLAddressAndACLUserNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLAddress",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLUserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Applications": {
      "get": {
        "description": "This method returns information about a specific application.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users",
        "summary": "List a Specific Application",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AppID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok"
            },
            "examples": {
              "application/json": {
                "application": [
                  {
                    "AccessPermittedFrom": 0,
                    "AccessPermittedTo": 24,
                    "AllowExtendedAuthenticationRestrictions": false,
                    "AppID": "RESTExamples",
                    "BusinessOwnerEmail": "john.doecyberark.com",
                    "BusinessOwnerFName": "John",
                    "BusinessOwnerLName": "Doe",
                    "BusinessOwnerPhone": "555-555-1212",
                    "Description": "AppID for all AIM and REST Examples",
                    "Disabled": false,
                    "ExpirationDate": null,
                    "Location": "\\Applications"
                  }
                ]
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Applications?AppID={{AppID}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "396",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 18:51:27 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{\"application\":[{\"AccessPermittedFrom\":0,\"AccessPermittedTo\":24,\"AllowExtendedAuthenticationRestrictions\":false,\"AppID\":\"RESTExamples\",\"BusinessOwnerEmail\":\"john.doecyberark.com\",\"BusinessOwnerFName\":\"John\",\"BusinessOwnerLName\":\"Doe\",\"BusinessOwnerPhone\":\"555-555-1212\",\"Description\":\"AppID for all AIM and REST Examples\",\"Disabled\":false,\"ExpirationDate\":null,\"Location\":\"\\\\Applications\"}]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List a Specific Application",
            "x-testDescription": "This method returns information about a specific application.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes a specific application.\r\nThe user requires the following permission in the Vault:\r\n- Manage Users",
        "summary": "Delete a Specific Application",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AppID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Applications?AppID={{AppID}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete a Specific Application",
            "x-testDescription": "This method deletes a specific application.\r\nThe user requires the following permission in the Vault:\r\n- Manage Users"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Applications/": {
      "post": {
        "description": "This method adds a new application to the Vault.\r\nThe user who adds this application requires the following permission in the Vault:\r\n- Manage Users",
        "summary": "Add Application",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddApplicationrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "schema": {}
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Applications/",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"application\":{\"AppID\":\"{{AppID}}\",\"Description\":\"Testing DevOps Deployments with CyberArk\",\"Location\":\"/Applications\",\"AccessPermittedFrom\":0,\"AccessPermittedTo\":23,\"ExpirationDate\":\"\",\"Disabled\":\"No\",\"BusinessOwnerFName\":\"John\",\"BusinessOwnerLName\":\"Doe\",\"BusinessOwnerEmail\":\"John.Doe@CyberArk.com\",\"BusinessOwnerPhone\":\"555-555-1212\"}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Application",
            "x-testDescription": "This method adds a new application to the Vault.\r\nThe user who adds this application requires the following permission in the Vault:\r\n- Manage Users"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Applications/{AppID}/Authentications": {
      "get": {
        "description": "This method returns information about all the authentications methods of a specific application.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users",
        "summary": "List all Authentication Methods of a Specific Application",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsAuthenticationsByAppIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AppID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes a specific authentication method from a defined application.\r\nThe user requires the following permission in the Vault:\r\n- Manage Users",
        "summary": "Delete a Specific Authentication",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsAuthenticationsByAppIDDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AuthID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AppID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Applications/{AppID}/Authentications/": {
      "post": {
        "description": "This method adds a new authentication method to a specific application in the Vault.\r\nThe user who adds this authentication method requires the following permissions in the Vault:\r\n- Manage Users",
        "summary": "Add Authentication",
        "tags": [
          "Applications [v9.1+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcApplicationsAuthenticationsByAppIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AppID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logon": {
      "post": {
        "description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method allows you to set a new password.\r\nYou can define the validity period of a users login for REST API and Mobile applications. After the configured timeout expires, users have to log on again using their username and password.\r\nUsers can authenticate using CyberArk, LDAP or RADIUS authentication.\r\n\r\nNOTE: *connectionNumber* allows the use of multiple accounts with REST.  It requires that a *connectionNumber* be generated and tracked by the script.  It is limited to 100 concurrent sessions.  For unlimited concurrent sessions, please see *Shared Logon Authentication*.",
        "summary": "CyberArk [v9.0+]/LDAP [v9.7+]/Radius [v9.7+] Logon",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthCyberarkCyberArkAuthenticationServiceSvcLogonPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cyberark[v9.0+]~1ldap[v9.7+]~1radius[v9.7+]Logonrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok11"
            },
            "examples": {
              "application/json": {
                "CyberArkLogonResult": "AAEAAAD/////AQAAAAAAAAAMAgAAAFhDeWJlckFyay5TZXJ2aWNlcy5XZWIsIFZlcnNpb249OC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj00MGJlMWRiYzg3MTg2NzBmBQEAAAAoQ3liZXJBcmsuU2VydmljZXMuV2ViLlNlc3Npb25JZGVudGlmaWVycwQAAAAFVG9rZW4ESW5mbwlTZXNzaW9uSWQEVHlwZQEBAQECAAAABgMAAAAQMzYyNTkyRUY2ODhCRTA4QgYEAAAAUDAwMDAwMDAyOTQxQTVFMjA5OUY2NjU3MzY5MUQxM0VENThCOTdCNDVFNUM0RDBCMzEzNzNDNjZGRDIwOUU5NkE0QjM0MjdDMzAwMDAwMDAwBgUAAAAkMzFhYzg3Y2EtNzkzMS00MWY0LWFkZTctMTRlYTdiZmQzYzA0BgYAAAAACw=="
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logon",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"username\":\"{{apiUsername}}\",\"password\":\"{{apiPassword}}\",\"useRadiusAuthentication\":\"false\",\"connectionNumber\":\"1\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "503",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 17:16:31 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{\"CyberArkLogonResult\":\"AAEAAAD/////AQAAAAAAAAAMAgAAAFhDeWJlckFyay5TZXJ2aWNlcy5XZWIsIFZlcnNpb249OC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj00MGJlMWRiYzg3MTg2NzBmBQEAAAAoQ3liZXJBcmsuU2VydmljZXMuV2ViLlNlc3Npb25JZGVudGlmaWVycwQAAAAFVG9rZW4ESW5mbwlTZXNzaW9uSWQEVHlwZQEBAQECAAAABgMAAAAQMzYyNTkyRUY2ODhCRTA4QgYEAAAAUDAwMDAwMDAyOTQxQTVFMjA5OUY2NjU3MzY5MUQxM0VENThCOTdCNDVFNUM0RDBCMzEzNzNDNjZGRDIwOUU5NkE0QjM0MjdDMzAwMDAwMDAwBgUAAAAkMzFhYzg3Y2EtNzkzMS00MWY0LWFkZTctMTRlYTdiZmQzYzA0BgYAAAAACw==\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "CyberArk [v9.0+]/LDAP [v9.7+]/Radius [v9.7+] Logon",
            "x-testDescription": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method allows you to set a new password.\r\nYou can define the validity period of a users login for REST API and Mobile applications. After the configured timeout expires, users have to log on again using their username and password.\r\nUsers can authenticate using CyberArk, LDAP or RADIUS authentication.\r\n\r\nNOTE: *connectionNumber* allows the use of multiple accounts with REST.  It requires that a *connectionNumber* be generated and tracked by the script.  It is limited to 100 concurrent sessions.  For unlimited concurrent sessions, please see *Shared Logon Authentication*."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logoff": {
      "post": {
        "description": "This method logs off the user and removes the Vault session.",
        "summary": "CyberArk [v9.0+]/LDAP [v9.7+]/Radius [v9.7+] Logoff",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthCyberarkCyberArkAuthenticationServiceSvcLogoffPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{}"
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logoff",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "KEYS",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "2",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 17:50:00 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "CyberArk [v9.0+]/LDAP [v9.7+]/Radius [v9.7+] Logoff",
            "x-testDescription": "This method logs off the user and removes the Vault session."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/SAML/SAMLAuthenticationService.svc/Logon": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "SAML Authentication Logon [v9.7+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthSAMLSAMLAuthenticationServiceSvcLogonPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/SAML/SAMLAuthenticationService.svc/Logon",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{SAMLToken}}"
              },
              "body": "{}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "SAML Authentication Logon [v9.7+]",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/SAML/SAMLAuthenticationService.svc/Logoff": {
      "post": {
        "description": "This method logs off the user and removes the Vault session.\r\nThis web service is used to log off when the user authenticated with SAML authentication.",
        "summary": "SAML Authentication Logoff [v9.7+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthSAMLSAMLAuthenticationServiceSvcLogoffPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/SAML/SAMLAuthenticationService.svc/Logoff",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{SAMLToken}}"
              },
              "body": "{}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "SAML Authentication Logoff [v9.7+]",
            "x-testDescription": "This method logs off the user and removes the Vault session.\r\nThis web service is used to log off when the user authenticated with SAML authentication."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logon": {
      "post": {
        "description": "This method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.\n-------------------------\nShared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can logon to the PVWA, but multiple users can use the logon token.\nThis type of authentication requires the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\nMultiple concurrent connections can be created using the same token, without affecting each other.\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWA web.config file:\n`<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web Access\\CredFiles\\WSUser.ini\"/>`\n- Make sure that this user can access the the PVWA interface.\n- Make sure the user only has the permissions in the Vault that they require.\nFor information about securing communication when using the SDK, refer to the following:\n- Securing Communication between Applications and the REST Web Services\n- Configuring Client Authentication via Client Certificates\n\nNOTE: Allows unlimited concurrent sessions, does not require a *connectionNumber* to be passed or generated.",
        "summary": "Shared Logon Authentication Logon [v9.7+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthSharedRestfulAuthenticationServiceSvcLogonPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logon",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Shared Logon Authentication Logon [v9.7+]",
            "x-testDescription": "This method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.\n-------------------------\nShared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can logon to the PVWA, but multiple users can use the logon token.\nThis type of authentication requires the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\nMultiple concurrent connections can be created using the same token, without affecting each other.\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWA web.config file:\n`<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web Access\\CredFiles\\WSUser.ini\"/>`\n- Make sure that this user can access the the PVWA interface.\n- Make sure the user only has the permissions in the Vault that they require.\nFor information about securing communication when using the SDK, refer to the following:\n- Securing Communication between Applications and the REST Web Services\n- Configuring Client Authentication via Client Certificates\n\nNOTE: Allows unlimited concurrent sessions, does not require a *connectionNumber* to be passed or generated."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logoff": {
      "post": {
        "description": "This method logs off the shared user and removes the Vault session.\n-------------------------\nShared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can logon to the PVWA, but multiple users can use the logon token.\nThis type of authentication requires the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\nMultiple concurrent connections can be created using the same token, without affecting each other.\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWA web.config file:\n<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web\nAccess\\CredFiles\\WSUser.ini\"/>\n- Make sure that this user can access the the PVWA interface.\n- Make sure the user only has the permissions in the Vault that they require.\nFor information about securing communication when using the SDK, refer to the following:\n- Securing Communication between Applications and the REST Web Services\n- Configuring Client Authentication via Client Certificates",
        "summary": "Shared Logon Authentication Logoff [v9.7+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesAuthSharedRestfulAuthenticationServiceSvcLogoffPost",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logoff"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Shared Logon Authentication Logoff [v9.7+]",
            "x-testDescription": "This method logs off the shared user and removes the Vault session.\n-------------------------\nShared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can logon to the PVWA, but multiple users can use the logon token.\nThis type of authentication requires the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\nMultiple concurrent connections can be created using the same token, without affecting each other.\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWA web.config file:\n<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web\nAccess\\CredFiles\\WSUser.ini\"/>\n- Make sure that this user can access the the PVWA interface.\n- Make sure the user only has the permissions in the Vault that they require.\nFor information about securing communication when using the SDK, refer to the following:\n- Securing Communication between Applications and the REST Web Services\n- Configuring Client Authentication via Client Certificates"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Users/{UserName}/AuthenticationMethods/SSHKeyAuthentication/AuthorizedKeys": {
      "get": {
        "description": "This method retrieves all public SSH keys that are authorized for a specific user.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Reset Users' Passwords\r\nIn addition, the user who runs this web service must be in the same Vault Location or higher as the user whose public SSH keys are retrieved.\r\nNote: A user cannot manage their own public SSH keys.",
        "summary": "SSH - Get Public SSH Keys [v9.6+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersAuthenticationMethodsSSHKeyAuthenticationAuthorizedKeysByUserNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "This method adds an authorized public SSH key for a specific user in the Vault, allowing them to authenticate to the Vault through PSMP using a corresponding private SSH key.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Reset Users' Passwords\r\nIn addition, the user who runs this web service must be in the same Vault Location or higher as the user whose public SSH keys are added.\r\nNote: A user cannot manage their own public SSH keys.",
        "summary": "SSH - Add a Public SSH Key [v9.6+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersAuthenticationMethodsSSHKeyAuthenticationAuthorizedKeysByUserNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Ssh  add a public ssh key [v9.6+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes an authorized public SSH key for a specific user in the Vault, preventing them from authenticating to the Vault through PSMP using a corresponding private SSH key.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Reset Users' Passwords\r\nIn addition, the user who runs this web service must be in the same Vault Location or higher as the user whose public SSH keys are deleted.\r\nNote: A user cannot manage their own public SSH keys.",
        "summary": "SSH - Delete Public SSH Key [v9.6+]",
        "tags": [
          "Authentication"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersAuthenticationMethodsSSHKeyAuthenticationAuthorizedKeysByUserNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "KeyID",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/AIMWebService/api/Accounts": {
      "get": {
        "description": "GetPassword  This service enables applications to retrieve passwords from the\r\nCentral Credential Provider.\r\n\r\n- AppID (REQUIRED)\r\n\t- Specifies the unique ID of the application issuing the password request.\r\n- Safe\r\n\t- Specifies the name of the Safe where the password is stored.\r\n- Folder\r\n\t- Specifies the name of the folder where the password is stored. (Default: Root)\r\n- Object\r\n\t- Specifies the name of the password object to retrieve.\r\n- UserName\r\n\t- Defines search criteria according to the UserName account property.\r\n- Address\r\n\t- Defines search criteria according to the Address account property.\r\n- Database\r\n\t- Defines search criteria according to the Database account property.\r\n- PolicyID\r\n\t- Defines the format that will be used in the setPolicyID method.\r\n- Reason\r\n\t- The reason for retrieving the password.  This reason will be audited in the Credential Provider audit log.\r\n- ConnectionTimeout\r\n\t- The number of seconds that the Central Credential Provider will try to retrieve the password.  The timeout is calculated when the request is sent from the web service to the Vault and returned back to the web service.\r\n\t\t- 30 (Default)\r\n- Query\r\n\t- Defines a free query using account properties, including Safe, folder, and object.  When this method is specified, all other search criteria (Safe/Folder/Object/UserName/Address/PolicyID/Database) are ignored and only the account properties that are specified in the query are passed to the Central Credential Provider in the password request.\r\n- QueryFormat\r\n\t- Defines the query format, which can optionally use regular expressions.\r\n\t- Possible values are:\r\n\t\t- Exact (Default)\r\n\t\t- Regexp\r\n- FailedRequestOnPasswordChange\r\n\t- Whether or not an error will be returned if this web service is called when a password change process is underway.\r\n\t\t- True\r\n\t\t- False (Default)",
        "summary": "GetPassword",
        "tags": [
          "Central Credential Provider (CCP) [v9.8+]"
        ],
        "operationId": "AIMWebServiceApiAccountsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AppID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Folder",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Object",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok14"
            },
            "examples": {
              "application/json": {
                "Content": "Cyberark1",
                "CreationMethod": "PVWA",
                "Address": "joe-garcia.local",
                "Safe": "T-APP-CYBR-RESTAPI",
                "UserName": "Svc_CyberArkREST",
                "Name": "Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST",
                "LogonDomain": "JOE-GARCIA",
                "PolicyID": "WinDomain",
                "DeviceType": "Operating System",
                "Folder": "Root",
                "PasswordChangeInProcess": "False"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Appap004e  password object matching query was not found"
            },
            "examples": {
              "application/json": {
                "ErrorCode": "APPAP004E",
                "ErrorMsg": "Password object matching query [Folder=Root;Object=Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST;Safe=T-APP-CYBR-RESTAPI] was not found (Diagnostic Info: 9). Please check that there is a password object that answers your query in the Vault and that both the Provider and the application user have the appropriate permissions needed in order to use the password."
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/AIMWebService/api/Accounts?AppID={{AppID}}&Safe={{Safe}}&Folder={{Folder}}&Object={{ObjectName}}",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache",
                "Content-Length": "336",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Wed, 20 Sep 2017 21:49:50 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5"
              },
              "body": "{\"Content\":\"Cyberark1\",\"CreationMethod\":\"PVWA\",\"Address\":\"joe-garcia.local\",\"Safe\":\"T-APP-CYBR-RESTAPI\",\"UserName\":\"Svc_CyberArkREST\",\"Name\":\"Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST\",\"LogonDomain\":\"JOE-GARCIA\",\"PolicyID\":\"WinDomain\",\"DeviceType\":\"Operating System\",\"Folder\":\"Root\",\"PasswordChangeInProcess\":\"False\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "GetPassword",
            "x-testDescription": "GetPassword  This service enables applications to retrieve passwords from the\r\nCentral Credential Provider.\r\n\r\n- AppID (REQUIRED)\r\n\t- Specifies the unique ID of the application issuing the password request.\r\n- Safe\r\n\t- Specifies the name of the Safe where the password is stored.\r\n- Folder\r\n\t- Specifies the name of the folder where the password is stored. (Default: Root)\r\n- Object\r\n\t- Specifies the name of the password object to retrieve.\r\n- UserName\r\n\t- Defines search criteria according to the UserName account property.\r\n- Address\r\n\t- Defines search criteria according to the Address account property.\r\n- Database\r\n\t- Defines search criteria according to the Database account property.\r\n- PolicyID\r\n\t- Defines the format that will be used in the setPolicyID method.\r\n- Reason\r\n\t- The reason for retrieving the password.  This reason will be audited in the Credential Provider audit log.\r\n- ConnectionTimeout\r\n\t- The number of seconds that the Central Credential Provider will try to retrieve the password.  The timeout is calculated when the request is sent from the web service to the Vault and returned back to the web service.\r\n\t\t- 30 (Default)\r\n- Query\r\n\t- Defines a free query using account properties, including Safe, folder, and object.  When this method is specified, all other search criteria (Safe/Folder/Object/UserName/Address/PolicyID/Database) are ignored and only the account properties that are specified in the query are passed to the Central Credential Provider in the password request.\r\n- QueryFormat\r\n\t- Defines the query format, which can optionally use regular expressions.\r\n\t- Possible values are:\r\n\t\t- Exact (Default)\r\n\t\t- Regexp\r\n- FailedRequestOnPasswordChange\r\n\t- Whether or not an error will be returned if this web service is called when a password change process is underway.\r\n\t\t- True\r\n\t\t- False (Default)"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/IncomingRequests": {
      "get": {
        "description": "This method returns a list of all the requests for the confirmer to respond to.",
        "summary": "Get Incoming Request List [v9.10+]",
        "tags": [
          "Confirm Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIIncomingRequestsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "onlywaiting",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "expired",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/IncomingRequests?onlywaiting=false&expired=false",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Incoming Request List [v9.10+]",
            "x-testDescription": "This method returns a list of all the requests for the confirmer to respond to."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/IncomingRequests/{RequestID}": {
      "get": {
        "description": "This method returns details of a specific request in the Incoming Requests list.",
        "summary": "Get Details of a Request for Confirmation [v9.10+]",
        "tags": [
          "Confirm Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIIncomingRequestsByRequestIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "RequestID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/IncomingRequests/{RequestID}/Confirm": {
      "post": {
        "description": "This method enables a request confirmer to confirm a single request, identified by its request ID.",
        "summary": "Confirm Request [v9.10+]",
        "tags": [
          "Confirm Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIIncomingRequestsConfirmByRequestIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfirmRequest[v9.10+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "RequestID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/IncomingRequests/{RequestID}/Reject": {
      "post": {
        "description": "This method enables a request confirmer to reject a single request, identified by its request ID.",
        "summary": "Reject Request [v9.10+]",
        "tags": [
          "Confirm Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIIncomingRequestsRejectByRequestIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RejectRequest[v9.10+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "RequestID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/PSMConnect": {
      "post": {
        "description": "This method allows you to connect with an account through PSM using an RDP file, by returning RDP settings that can be used with an RDP client application. It requires the PVWA and PSM to be configured for transparent connections through PSM with RDP files.\r\n\r\nFor more information, refer to Configuring the PSM Session User Experience for Connections Through PVWA in the Privileged Account Security Implementation Guide.",
        "summary": "Connect Through PSM [v9.10+]",
        "tags": [
          "Connections [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIAccountsPSMConnectByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectThroughPsm[v9.10+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Account": {
      "post": {
        "description": "This method adds a new privileged account to the Vault.",
        "summary": "Add Account [v9.0+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAccount[v9.0+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Account",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"account\":{\"safe\":\"{{Safe}}\",\"platformID\":\"WinDomain\",\"address\":\"{{Address}}\",\"accountName\":\"\",\"password\":\"Password123\",\"username\":\"{{UserName}}\",\"disableAutoMgmt\":\"false\",\"disableAutoMgmtReason\":\"N/A\",\"groupName\":\"\",\"groupPlatformID\":\"\",\"properties\":[{\"Key\":\"Port\",\"Value\":\"<port>\"},{\"Key\":\"ParamName\",\"Value\":\"Parameter value\"}]}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Account [v9.0+]",
            "x-testDescription": "This method adds a new privileged account to the Vault."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/PendingAccounts": {
      "post": {
        "description": "This method enables an account that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.\r\nNote: This method adds password accounts only. It does not add SSH Keys.",
        "summary": "Add Pending Account [v9.7+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcPendingAccountsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddPendingAccount[v9.7+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/PendingAccounts",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"pendingAccount\":{\"UserName\":\"{{UserName}}\",\"Address\":\"{{Address}}\",\"AccountDiscoveryDate\":\"2016-12-19T08:19:03Z\",\"AccountEnabled\":\"Disabled\",\"AccountOSGroups\":\"Domain Admins\",\"AccountType\":\"Domain\",\"Domain\":\"joe-garcia.local\",\"PasswordNeverExpires\":\"false\",\"OSVersion\":\"Windows Server 2012 R2\",\"OU\":\"Users\",\"AccountCategory\":\"Privileged\",\"UserDisplayName\":\"CA_EPVTestUser\",\"AccountDescription\":\"CyberArk EPV Test User for Web Services\",\"GID\":\"\",\"UID\":\"\",\"OSType\":\"Windows\",\"DiscoveryPlatformType\":\"Windows Domain Accounts\",\"MachineOSFamily\":\"server\",\"LastLogonDate\":\"\",\"LastPasswordSetDate\":\"2016-12-19T08:19:03Z\",\"AccountExpirationDate\":\"\",\"AccountCategoryCriteria\":\"<criteria>\"}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Pending Account [v9.7+]",
            "x-testDescription": "This method enables an account that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.\r\nNote: This method adds password accounts only. It does not add SSH Keys."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}": {
      "put": {
        "description": "This method updates an existing account's details. In order to execute this web service, all the accounts details must be entered in the web service request. If the existing accounts properties are not sent as part of the request, the properties will be removed from the account. Any values sent in the request that were changed will be updated. All other properties values will remain the same.\r\nWhen you change the name or folder of a service account that has multiple dependencies (usages), the connection between it and its dependencies will be automatically maintained.\r\nIn addition, when you change the name or a folder of an account that is linked to another account, whether logon, reconciliation or verification, the links will be automatically updated.\r\nNotes:\r\nThis web service has the following limitations:\r\n- Dependencies (usages) cannot be updated.\r\n- Accounts that do not have a policy ID cannot be updated.\r\nPermissions\r\n- To update account properties, Safe members require the following permission:\r\n  - Update password properties\r\n- To rename accounts, Safe members require the following permission:\r\n  - Rename accounts\r\n- To move accounts to a different folder, Safe members require the following permission:\r\n  - Move accounts/folders",
        "summary": "Update Account Details [v9.5+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsByAccountIDPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAccountDetails[v9.5+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes a specific account in the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Delete accounts",
        "summary": "Delete Account [v9.3+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsByAccountIDDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/Credentials": {
      "get": {
        "description": "This method enables users to retrieve the password of an existing account that is identified by its Account ID.\r\n- This web service will not return SSH Keys. If the request was sent for an SSH key, the following error will be returned: \"Failed to get the credentials of <AccountID>. Reason: The account is of type SSH Key.\"\r\n- This web service will not be able to retrieve the password if a reason is required (according to its effective Master Policy), and an error will be returned.",
        "summary": "Get Account Value [v9.7-9.10]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsCredentialsByAccountIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/Password/Retrieve": {
      "post": {
        "description": "This method enables users to retrieve the password or SSH key of an existing account that is identified by its Account ID. It enables users to specify a reason and ticket ID, if required.\r\n\r\nThis method can be used from v10 and replaces the Get Account Value method.",
        "summary": "Get Password Value [v10]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsPasswordRetrieveByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetPasswordValue[v10]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/ChangeCredentials": {
      "put": {
        "description": "This method marks the account for an immediate password change by the CPM to a new random password.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n- Initiate CPM password management operations\r\n\r\nNOTE: 'ImmediateChangeByCPM' is in the Web Services SDK as part of the body, but it should be included in the header as it is here.",
        "summary": "Change Credentials [v9.3+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsChangeCredentialsByAccountIDPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeCredentials[v9.3+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ImmediateChangeByCPM",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/Change": {
      "post": {
        "description": "This method marks an account for an immediate credentials change by the CPM to a new random value.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations",
        "summary": "Change Credentials Immediately [v9.10+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsChangeByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeCredentialsImmediately[v9.10+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/SetNextPassword": {
      "post": {
        "description": "This method enables users to set the account's credentials to use for the next CPM change.\r\n\r\nThe user who runs this web service requires the following permissions in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations\r\n* Specify next password value",
        "summary": "Change Credentials and Set Next Password [v10]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsSetNextPasswordByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeCredentialsAndSetNextPassword[v10]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/Password/Update": {
      "post": {
        "description": "This method enables users to set the account's credentials and change it in the Vault.\r\n\r\nThis will not affect the credentials on the target device.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Update password value",
        "summary": "Change Credentials in the Vault [v10]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsPasswordUpdateByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeCredentialsInTheVault[v10]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/VerifyCredentials": {
      "post": {
        "description": "This method marks an account for verification by the CPM.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations\r\n\r\n__This endpoint has been deprecated past v9.9.5__",
        "summary": "Verify Credentials [v9.7-v9.9.5]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsVerifyCredentialsByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/Verify": {
      "post": {
        "description": "This method marks an account for verification by the CPM, and can be used in versions from v9.10.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations",
        "summary": "Verify Credentials [v9.10+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsVerifyByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/Reconcile": {
      "post": {
        "description": "This method marks an account for automatic reconciliation by the CPM.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations",
        "summary": "Reconcile Credentials [v9.10+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsReconcileByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts": {
      "get": {
        "description": "This method returns information about an account. If more than one account meets the search criteria, only the first account will be returned, although the Count output parameter will display the number of accounts that were found.\r\nOnly the following users can access this account:\r\n- Users who are members of the Safe where the account is stored.\r\n- Users who have access to this specific account. For more information about object level access control, refer to Object Level Access Control in the Privileged Account Security Implementation Guide.\r\n- The user who runs this web service requires the following permission in the Safe:\r\n  - List accounts\r\nNotes:\r\n- This method does not display the actual password.\r\n- If ten or more accounts are found, the Count Output parameter will show 10.",
        "summary": "Get Account Details [v9.3+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Keywords",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok31"
            },
            "examples": {
              "application/json": {
                "Count": 1,
                "accounts": [
                  {
                    "AccountID": "41_4",
                    "InternalProperties": [
                      {
                        "Key": "CPMStatus",
                        "Value": "success"
                      },
                      {
                        "Key": "CreationMethod",
                        "Value": "PVWA"
                      },
                      {
                        "Key": "RetriesCount",
                        "Value": "-1"
                      },
                      {
                        "Key": "LastTask",
                        "Value": "VerifyTask"
                      }
                    ],
                    "Properties": [
                      {
                        "Key": "Safe",
                        "Value": "T-APP-CYBR-RESTAPI"
                      },
                      {
                        "Key": "Folder",
                        "Value": "Root"
                      },
                      {
                        "Key": "Name",
                        "Value": "Operating System-WindowsDomainAccount-cyberark.local-test.user0001"
                      },
                      {
                        "Key": "UserName",
                        "Value": "test.user0001"
                      },
                      {
                        "Key": "PolicyID",
                        "Value": "WindowsDomainAccount"
                      },
                      {
                        "Key": "LogonDomain",
                        "Value": "CYBERARK"
                      },
                      {
                        "Key": "LastSuccessVerification",
                        "Value": "1496683713"
                      },
                      {
                        "Key": "Address",
                        "Value": "cyberark.local"
                      },
                      {
                        "Key": "DeviceType",
                        "Value": "Operating System"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Accounts?Keywords={{Keywords}}&Safe={{Safe}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "697",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 17:48:52 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{\"Count\":1,\"accounts\":[{\"AccountID\":\"41_4\",\"InternalProperties\":[{\"Key\":\"CPMStatus\",\"Value\":\"success\"},{\"Key\":\"CreationMethod\",\"Value\":\"PVWA\"},{\"Key\":\"RetriesCount\",\"Value\":\"-1\"},{\"Key\":\"LastTask\",\"Value\":\"VerifyTask\"}],\"Properties\":[{\"Key\":\"Safe\",\"Value\":\"T-APP-CYBR-RESTAPI\"},{\"Key\":\"Folder\",\"Value\":\"Root\"},{\"Key\":\"Name\",\"Value\":\"Operating System-WindowsDomainAccount-cyberark.local-test.user0001\"},{\"Key\":\"UserName\",\"Value\":\"test.user0001\"},{\"Key\":\"PolicyID\",\"Value\":\"WindowsDomainAccount\"},{\"Key\":\"LogonDomain\",\"Value\":\"CYBERARK\"},{\"Key\":\"LastSuccessVerification\",\"Value\":\"1496683713\"},{\"Key\":\"Address\",\"Value\":\"cyberark.local\"},{\"Key\":\"DeviceType\",\"Value\":\"Operating System\"}]}]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Account Details [v9.3+]",
            "x-testDescription": "This method returns information about an account. If more than one account meets the search criteria, only the first account will be returned, although the Count output parameter will display the number of accounts that were found.\r\nOnly the following users can access this account:\r\n- Users who are members of the Safe where the account is stored.\r\n- Users who have access to this specific account. For more information about object level access control, refer to Object Level Access Control in the Privileged Account Security Implementation Guide.\r\n- The user who runs this web service requires the following permission in the Safe:\r\n  - List accounts\r\nNotes:\r\n- This method does not display the actual password.\r\n- If ten or more accounts are found, the Count Output parameter will show 10."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Accounts/{AccountID}/CheckIn": {
      "post": {
        "description": "This method checks an exclusive account into the Vault.\r\n\r\n* If the account is managed automatically by the CPM, after it is checked in, the password is changed immediately.\r\n* If the account is managed manually, a notification is sent to a user who is authorized to change the password. The account is checked in automatically after it has been changed.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations",
        "summary": "Check-In Exclusive Account [v9.10+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultAPIAccountsCheckInByAccountIDPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/Activities": {
      "get": {
        "description": "This method returns the activities of a specific account that is identified by its account ID.",
        "summary": "List Activity by ID [v9.7+]",
        "tags": [
          "Managing Accounts"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcAccountsActivitiesByAccountIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SafeName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Platforms/{PlatformName}": {
      "get": {
        "description": "This method retrieves details of a specified platform from the Vault.",
        "summary": "Get Platform Details [v9.10+]",
        "tags": [
          "Managing Platforms [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIPlatformsByPlatformNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "PlatformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Recordings": {
      "get": {
        "description": "This method returns the details of recordings of PSM, PSMP or OPM sessions.",
        "summary": "Get Recordings [v9.10+]",
        "tags": [
          "Monitor Sessions [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIRecordingsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Search",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "FromTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "ToTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Activities",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/Recordings?Limit=25&Sort=RiskScore&Offset=0&Search=adm_domain&Safe={{Safe}}&FromTime=1514808001&ToTime=1515326399&Activities=regedit",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Recordings [v9.10+]",
            "x-testDescription": "This method returns the details of recordings of PSM, PSMP or OPM sessions."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/LiveSessions": {
      "get": {
        "description": "This method returns details of live sessions.",
        "summary": "Get Live Sessions [v9.10+]",
        "tags": [
          "Monitor Sessions [v9.10+]"
        ],
        "operationId": "PasswordVaultAPILiveSessionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Search",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "FromTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "ToTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Activities",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/LiveSessions?Limit=25&Sort=RiskScore&Offset=0&Search=adm_domain&Safe={{Safe}}&FromTime=1514808001&ToTime=1515326399&Activities=regedit",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Live Sessions [v9.10+]",
            "x-testDescription": "This method returns details of live sessions."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/LiveSessions/{PSMLiveSessionId}/Terminate": {
      "post": {
        "description": "This method terminates a live PSM session.",
        "summary": "Terminate Live Session [v10]",
        "tags": [
          "Monitor Sessions [v9.10+]"
        ],
        "operationId": "PasswordVaultAPILiveSessionsTerminateByPSMLiveSessionIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "PSMLiveSessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/MyRequests": {
      "get": {
        "description": "This method returns a list of the end user's requests.",
        "summary": "Get My Requests [v9.10+]",
        "tags": [
          "My Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIMyRequestsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "onlywaiting",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "expired",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/MyRequests?onlywaiting=false&expired=false",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get My Requests [v9.10+]",
            "x-testDescription": "This method returns a list of the end user's requests."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "This method creates an access request for a specific account. This account may be either a password account or an SSH Key account.",
        "summary": "Create a Request [v9.10+]",
        "tags": [
          "My Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIMyRequestsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateARequest[v9.10+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/API/MyRequests",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"AccountID\":\"{{AccountID}}\",\"Reason\":\"Access requested via CyberArk Web Services\",\"TicketingSystemName\":\"ServiceNow\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create a Request [v9.10+]",
            "x-testDescription": "This method creates an access request for a specific account. This account may be either a password account or an SSH Key account."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/MyRequests/{RequestID}": {
      "get": {
        "description": "This method returns details of all the requests in My Requests list.",
        "summary": "Get Details of My Requests [v9.10+]",
        "tags": [
          "My Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIMyRequestsByRequestIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "RequestID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes a request made by a user.",
        "summary": "Delete My Request [v9.10+]",
        "tags": [
          "My Requests [v9.10+]"
        ],
        "operationId": "PasswordVaultAPIMyRequestsByRequestIDDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "RequestID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/api/AutomaticOnboardingRules": {
      "post": {
        "description": "This method adds a new onboarding rule to the Vault that filters discovered local privileged pending accounts. When a discovered pending account matches a rule, it will automatically be onboarded to the Safe that is defined in the rule and the password will be reconciled.\r\nNote: The Safe and the reconcile account must be created according to the rules definition before you run this API in order to onboard the pending account automatically. The reconcile account must be associated to the platform that is defined in the rule.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins",
        "summary": "Add Onboarding Rule",
        "tags": [
          "Onboarding Rules [v9.8+]"
        ],
        "operationId": "PasswordVaultApiAutomaticOnboardingRulesPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddOnboardingRulerequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/api/AutomaticOnboardingRules",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"DecisionPlatformId\":\"WinLocalAccount\",\"DecisionSafeName\":\"{{Safe}}\",\"IsAdminUIDFilter\":\"true\",\"MachineTypeFilter\":\"Server\",\"SystemTypeFilter\":\"Windows\",\"UserNameFilter\":\"\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Onboarding Rule",
            "x-testDescription": "This method adds a new onboarding rule to the Vault that filters discovered local privileged pending accounts. When a discovered pending account matches a rule, it will automatically be onboarded to the Safe that is defined in the rule and the password will be reconciled.\r\nNote: The Safe and the reconcile account must be created according to the rules definition before you run this API in order to onboard the pending account automatically. The reconcile account must be associated to the platform that is defined in the rule.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes an automatic onboarding rule from the Vault.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins",
        "summary": "Delete Onboarding Rule",
        "tags": [
          "Onboarding Rules [v9.8+]"
        ],
        "operationId": "PasswordVaultApiAutomaticOnboardingRulesDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/PasswordVault/api/AutomaticOnboardingRules?id=1",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Onboarding Rule",
            "x-testDescription": "This method deletes an automatic onboarding rule from the Vault.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/api/AutomaticOnboardingRules/": {
      "get": {
        "description": "This method returns information about all the defined onboarding rules.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins",
        "summary": "Get Onboarding Rule",
        "tags": [
          "Onboarding Rules [v9.8+]"
        ],
        "operationId": "PasswordVaultApiAutomaticOnboardingRulesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/api/AutomaticOnboardingRules/",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Onboarding Rule",
            "x-testDescription": "This method returns information about all the defined onboarding rules.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Policy/{ACLPolicyID}/PrivilegedCommands": {
      "get": {
        "description": "This method gets a list of the privileged commands (OPM rules) associated with this policy.",
        "summary": "List Policy/ACL",
        "tags": [
          "Policy/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcPolicyPrivilegedCommandsByACLPolicyIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "This method adds a new privileged command rule to the policy.",
        "summary": "Add Policy/ACL",
        "tags": [
          "Policy/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcPolicyPrivilegedCommandsByACLPolicyIDPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddPolicy~1aclrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes all privileged commands rules associated with the policy.",
        "summary": "Delete Policy/ACL",
        "tags": [
          "Policy/ACL Methods [v9.0+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcPolicyPrivilegedCommandsByACLPolicyIDDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ACLPolicyID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Safes": {
      "get": {
        "description": "This method returns information about the Safes in the Vault that meet the criteria specified in the search query.",
        "summary": "Search for a Safe [v9.7+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Safes?query={{Query}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Search for a Safe [v9.7+]",
            "x-testDescription": "This method returns information about the Safes in the Vault that meet the criteria specified in the search query."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "This method updates a single Safe in the Vault. The user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe",
        "summary": "Update Safe [v9.3+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SafeName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateSafe[v9.3+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Safes?SafeName={{Safe}}",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"safe\":{\"SafeName\":\"{{Safe}}\",\"Description\":\"Test, Application, CyberArk, API, Update Safe Test\",\"OLACEnabled\":false,\"ManagingCPM\":\"PasswordManager\",\"NumberOfVersionsRetention\":5,\"NumberOfDaysRetention\":7}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update Safe [v9.3+]",
            "x-testDescription": "This method updates a single Safe in the Vault. The user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "This method adds a new Safe to the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Add Safes",
        "summary": "Add Safe [v9.2+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddSafe[v9.2+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Safes",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"safe\":{\"SafeName\":\"{{Safe}}\",\"Description\":\"Test, Application, CyberArk, API\",\"OLACEnabled\":false,\"ManagingCPM\":\"PasswordManager\",\"NumberofVersionsRetention\":5,\"NumberofDaysRetention\":7}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Safe [v9.2+]",
            "x-testDescription": "This method adds a new Safe to the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Add Safes"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Safes/{Safe}": {
      "get": {
        "description": "This method returns information about a specific Safe in the Vault.",
        "summary": "Get Safe Details [v9.7+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesBySafeGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "This method deletes a Safe from the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe",
        "summary": "Delete Safe [v9.3+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesBySafeDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/Safes/{Safe}/AccountGroups": {
      "get": {
        "description": "This method returns all the existing account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties",
        "summary": "Get Safe Account Groups [v9.10+]",
        "tags": [
          "Safe Management"
        ],
        "operationId": "PasswordVaultAPISafesAccountGroupsBySafeGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Safes/{Safe}/Members": {
      "get": {
        "description": "This method returns a list of the members of the Safe. The user performing this task must have the following permissions in the Safe:\r\n- View Safe Members",
        "summary": "List Safe Members [v9.7+]",
        "tags": [
          "Safe Members"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesMembersBySafeGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "This method updates an existing Safe member.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe Members",
        "summary": "Update Safe Member [v9.3+]",
        "tags": [
          "Safe Members"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesMembersBySafePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "MemberName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateSafeMember[v9.3+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "This method adds an existing user as a Safe member.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe Members",
        "summary": "Add Safe Member [v9.3+]",
        "tags": [
          "Safe Members"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesMembersBySafePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddSafeMember[v9.3+]request"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Safes/{Safe}/Members/{SafeMember}": {
      "delete": {
        "description": "This method removes a specific member from a Safe.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Manage Safe Members",
        "summary": "Delete Safe Member [v9.3+]",
        "tags": [
          "Safe Members"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcSafesMembersBySafeAndSafeMemberDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Safe",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "SafeMember",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Verify": {
      "get": {
        "description": "This method returns the display name of the Vault configured in the ServerDisplayName configuration parameter.",
        "summary": "Verify",
        "tags": [
          "Server Web Services [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcVerifyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok51"
            },
            "examples": {
              "application/json": {
                "ApplicationName": "PasswordVault",
                "AuthenticationMethods": [
                  {
                    "Enabled": true,
                    "Id": "windows"
                  },
                  {
                    "Enabled": false,
                    "Id": "pki"
                  },
                  {
                    "Enabled": true,
                    "Id": "cyberark"
                  },
                  {
                    "Enabled": false,
                    "Id": "oraclesso"
                  },
                  {
                    "Enabled": false,
                    "Id": "rsa"
                  },
                  {
                    "Enabled": true,
                    "Id": "radius"
                  },
                  {
                    "Enabled": true,
                    "Id": "ldap"
                  },
                  {
                    "Enabled": false,
                    "Id": "saml"
                  }
                ],
                "ServerId": "e10b6fe6-1bea-11e7-8329-000c29ebeaed",
                "ServerName": "Vault"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Verify"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "380",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 18:28:01 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{\"ApplicationName\":\"PasswordVault\",\"AuthenticationMethods\":[{\"Enabled\":true,\"Id\":\"windows\"},{\"Enabled\":false,\"Id\":\"pki\"},{\"Enabled\":true,\"Id\":\"cyberark\"},{\"Enabled\":false,\"Id\":\"oraclesso\"},{\"Enabled\":false,\"Id\":\"rsa\"},{\"Enabled\":true,\"Id\":\"radius\"},{\"Enabled\":true,\"Id\":\"ldap\"},{\"Enabled\":false,\"Id\":\"saml\"}],\"ServerId\":\"e10b6fe6-1bea-11e7-8329-000c29ebeaed\",\"ServerName\":\"Vault\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Verify",
            "x-testDescription": "This method returns the display name of the Vault configured in the ServerDisplayName configuration parameter."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Logo": {
      "get": {
        "description": "This method returns the configuration of the logo that will be displayed in the CyberArk SafeShare logon screen and account settings.\n\nNOTE: SafeShare is no longer available from CyberArk.",
        "summary": "Logo",
        "tags": [
          "Server Web Services [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcLogoGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500InternalServerError"
            },
            "examples": {
              "application/json": {
                "ErrorCode": "CAWS018E",
                "ErrorMessage": "Internal error occurred, contact your administrator."
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Logo?type=Square"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Logo",
            "x-testDescription": "This method returns the configuration of the logo that will be displayed in the CyberArk SafeShare logon screen and account settings.\n\nNOTE: SafeShare is no longer available from CyberArk."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Server": {
      "get": {
        "description": "This method returns the display name of the Vault configured in the ServerDisplayName configuration parameter.",
        "summary": "Server",
        "tags": [
          "Server Web Services [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcServerGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200Ok55"
            },
            "examples": {
              "application/json": {
                "ExternalVersion": "9.9.0",
                "InternalVersion": "9.90.0.18",
                "ServerName": "Vault"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403Forbidden(checkYourAuthorization~1authentication)"
            },
            "examples": {
              "application/json": {
                "ErrorCode": "CAIWS001E",
                "ErrorMessage": "Couldn't retrieve session token from request header."
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Server",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Cache-Control": "no-cache, no-store, must-revalidate",
                "Content-Length": "78",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Mon, 05 Jun 2017 18:42:20 GMT",
                "Expires": "-1",
                "Pragma": "no-cache",
                "Server": "Microsoft-IIS/8.5",
                "Set-Cookie": "CA22222=; path=/PasswordVault/; HttpOnly",
                "X-Frame-Options": "SAMEORIGIN",
                "X-UA-Compatible": "IE=EmulateIE8"
              },
              "body": "{\"ExternalVersion\":\"9.9.0\",\"InternalVersion\":\"9.90.0.18\",\"ServerName\":\"Vault\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Server",
            "x-testDescription": "This method returns the display name of the Vault configured in the ServerDisplayName configuration parameter."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/ComponentsMonitoringDetails/{ComponentsID}": {
      "get": {
        "description": "This method returns details about specific components and all their installed instances, and system health information for each one.\n\n_Valid ComponentsID values: PVWA/SessionManagement/CPM/AIM_",
        "summary": "System Details [v10]",
        "tags": [
          "System Health [v10]"
        ],
        "operationId": "PasswordVaultAPIComponentsMonitoringDetailsByComponentsIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ComponentsID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/API/ComponentsMonitoringSummary": {
      "get": {
        "description": "This method returns consolidated information about the Vault, PVWA, CPM, PSM/PSMP, and AIM, including all clients that are relevant to each specific component.",
        "summary": "System Summary [v10]",
        "tags": [
          "System Health [v10]"
        ],
        "operationId": "PasswordVaultAPIComponentsMonitoringSummaryGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/API/ComponentsMonitoringSummary",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "System Summary [v10]",
            "x-testDescription": "This method returns consolidated information about the Vault, PVWA, CPM, PSM/PSMP, and AIM, including all clients that are relevant to each specific component."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Users": {
      "put": {
        "description": "This method updates an existing Vault user.",
        "summary": "Update User",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateUserrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Users?UserName={{UserName}}",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"NewPassword\":\"Password321\",\"Email\":\"John.Doe@CyberArk.com\",\"FirstName\":\"John\",\"LastName\":\"Doe\",\"ChangePasswordOnTheNextLogon\":true,\"ExpiryDate\":\"\",\"UserTypeName\":\"EPVUser\",\"Disabled\":false,\"Location\":\"\\\\\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update User",
            "x-testDescription": "This method updates an existing Vault user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "This method adds a new user to the Vault.",
        "summary": "Add User",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddUserrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/Users",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "{{CyberArkLogonResult}}"
              },
              "body": "{\"UserName\":\"{{UserName}}\",\"InitialPassword\":\"Cyberark1\",\"Email\":\"EPVUserTest@cyberark.local\",\"FirstName\":\"REST API\",\"LastName\":\"EPVUserTest\",\"ChangePasswordOnTheNextLogon\":false,\"ExpiryDate\":\"yyyy-MM-dd\",\"UserTypeName\":\"EPVUser\",\"Disabled\":true,\"Location\":\"\\\\\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add User",
            "x-testDescription": "This method adds a new user to the Vault."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/API.svc/Users": {
      "delete": {
        "description": "This method deletes a specific User in the Vault.",
        "summary": "Delete User",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesAPISvcUsersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Conte",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/PasswordVault/WebServices/API.svc/Users?UserName={{UserName}}",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Conte": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete User",
            "x-testDescription": "This method deletes a specific User in the Vault."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/User": {
      "get": {
        "description": "This method returns user information of the user who is logged on.",
        "summary": "Logged on User Details",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUserGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/PasswordVault/WebServices/PIMServices.svc/User",
              "headers": {
                "Authorization": "{{CyberArkLogonResult}}",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Logged on User Details",
            "x-testDescription": "This method returns user information of the user who is logged on."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Users/{UserName}": {
      "get": {
        "description": "This method returns information about a specific User in the Vault.",
        "summary": "Get User Details",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersByUserNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "This method activates an existing Vault user.",
        "summary": "Activate User",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcUsersByUserNamePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActivateUserrequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/PasswordVault/WebServices/PIMServices.svc/Groups/{GroupName}/Users": {
      "post": {
        "description": "This method adds a specific user to an existing user group in the Vault.",
        "summary": "Add User to Group",
        "tags": [
          "User Management [v9.7+]"
        ],
        "operationId": "PasswordVaultWebServicesPIMServicesSvcGroupsUsersByGroupNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddUserToGrouprequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "AddAccountGrouprequest": {
      "title": "Add Account GroupRequest",
      "example": {
        "GroupName": "{{GroupName}}",
        "GroupPlatform": "{{PlatformID}}",
        "Safe": "{{Safe}}"
      },
      "type": "object",
      "properties": {
        "GroupName": {
          "description": "",
          "example": "{{GroupName}}",
          "type": "string"
        },
        "GroupPlatform": {
          "description": "",
          "example": "{{PlatformID}}",
          "type": "string"
        },
        "Safe": {
          "description": "",
          "example": "{{Safe}}",
          "type": "string"
        }
      },
      "required": [
        "GroupName",
        "GroupPlatform",
        "Safe"
      ]
    },
    "AddAccountToAccountGrouprequest": {
      "title": "Add Account to Account GroupRequest",
      "example": {
        "AccountID": "{{AccountID}}"
      },
      "type": "object",
      "properties": {
        "AccountID": {
          "description": "",
          "example": "{{AccountID}}",
          "type": "string"
        }
      },
      "required": [
        "AccountID"
      ]
    },
    "500InternalServerError(acladdressRequired)": {
      "title": "500 Internal Server Error (ACLAddress Required)",
      "example": {
        "ErrorCode": "CAWS00001E",
        "ErrorMessage": "Input parameter AccountAddress is obligatory. Please fix it and try again."
      },
      "type": "object",
      "properties": {
        "ErrorCode": {
          "description": "",
          "example": "CAWS00001E",
          "type": "string"
        },
        "ErrorMessage": {
          "description": "",
          "example": "Input parameter AccountAddress is obligatory. Please fix it and try again.",
          "type": "string"
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMessage"
      ]
    },
    "AddAccount/aclrequest": {
      "title": "Add Account/ACLRequest",
      "example": {
        "Command": "/bin/sh",
        "CommandGroup": false,
        "PermissionType": "Deny",
        "Restrictions": "",
        "UserName": "*"
      },
      "type": "object",
      "properties": {
        "Command": {
          "description": "",
          "example": "/bin/sh",
          "type": "string"
        },
        "CommandGroup": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "PermissionType": {
          "description": "",
          "example": "Deny",
          "type": "string"
        },
        "Restrictions": {
          "description": "",
          "type": "string"
        },
        "UserName": {
          "description": "",
          "example": "*",
          "type": "string"
        }
      },
      "required": [
        "Command",
        "CommandGroup",
        "PermissionType",
        "Restrictions",
        "UserName"
      ]
    },
    "200Ok": {
      "title": "200 OK",
      "example": {
        "application": [
          {
            "AccessPermittedFrom": 0,
            "AccessPermittedTo": 24,
            "AllowExtendedAuthenticationRestrictions": false,
            "AppID": "AIMWebService",
            "BusinessOwnerEmail": "",
            "BusinessOwnerFName": "",
            "BusinessOwnerLName": "",
            "BusinessOwnerPhone": "",
            "Description": "This application is for the web service installed for the Central Credential Provider.",
            "Disabled": false,
            "ExpirationDate": null,
            "Location": "\\"
          },
          {
            "AccessPermittedFrom": 0,
            "AccessPermittedTo": 24,
            "AllowExtendedAuthenticationRestrictions": false,
            "AppID": "RESTExamples",
            "BusinessOwnerEmail": "john.doe@cyberark.com",
            "BusinessOwnerFName": "John",
            "BusinessOwnerLName": "Doe",
            "BusinessOwnerPhone": "555-555-1212",
            "Description": "AppID for all AIM and REST Examples",
            "Disabled": false,
            "ExpirationDate": null,
            "Location": "\\Applications"
          }
        ]
      },
      "type": "object",
      "properties": {
        "application": {
          "description": "",
          "example": [
            {
              "AccessPermittedFrom": 0,
              "AccessPermittedTo": 24,
              "AllowExtendedAuthenticationRestrictions": false,
              "AppID": "AIMWebService",
              "BusinessOwnerEmail": "",
              "BusinessOwnerFName": "",
              "BusinessOwnerLName": "",
              "BusinessOwnerPhone": "",
              "Description": "This application is for the web service installed for the Central Credential Provider.",
              "Disabled": false,
              "ExpirationDate": null,
              "Location": "\\"
            },
            {
              "AccessPermittedFrom": 0,
              "AccessPermittedTo": 24,
              "AllowExtendedAuthenticationRestrictions": false,
              "AppID": "RESTExamples",
              "BusinessOwnerEmail": "john.doe@cyberark.com",
              "BusinessOwnerFName": "John",
              "BusinessOwnerLName": "Doe",
              "BusinessOwnerPhone": "555-555-1212",
              "Description": "AppID for all AIM and REST Examples",
              "Disabled": false,
              "ExpirationDate": null,
              "Location": "\\Applications"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          }
        }
      },
      "required": [
        "application"
      ]
    },
    "Application": {
      "title": "Application",
      "example": {
        "AccessPermittedFrom": 0,
        "AccessPermittedTo": 24,
        "AllowExtendedAuthenticationRestrictions": false,
        "AppID": "AIMWebService",
        "BusinessOwnerEmail": "",
        "BusinessOwnerFName": "",
        "BusinessOwnerLName": "",
        "BusinessOwnerPhone": "",
        "Description": "This application is for the web service installed for the Central Credential Provider.",
        "Disabled": false,
        "ExpirationDate": null,
        "Location": "\\"
      },
      "type": "object",
      "properties": {
        "AccessPermittedFrom": {
          "description": "",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "AccessPermittedTo": {
          "description": "",
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "AllowExtendedAuthenticationRestrictions": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "AppID": {
          "description": "",
          "example": "AIMWebService",
          "type": "string"
        },
        "BusinessOwnerEmail": {
          "description": "",
          "type": "string"
        },
        "BusinessOwnerFName": {
          "description": "",
          "type": "string"
        },
        "BusinessOwnerLName": {
          "description": "",
          "type": "string"
        },
        "BusinessOwnerPhone": {
          "description": "",
          "type": "string"
        },
        "Description": {
          "description": "",
          "example": "This application is for the web service installed for the Central Credential Provider.",
          "type": "string"
        },
        "Disabled": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "ExpirationDate": {
          "description": "",
          "type": "null"
        },
        "Location": {
          "description": "",
          "example": "\\",
          "type": "string"
        }
      },
      "required": [
        "AccessPermittedFrom",
        "AccessPermittedTo",
        "AllowExtendedAuthenticationRestrictions",
        "AppID",
        "BusinessOwnerEmail",
        "BusinessOwnerFName",
        "BusinessOwnerLName",
        "BusinessOwnerPhone",
        "Description",
        "Disabled",
        "ExpirationDate",
        "Location"
      ]
    },
    "AddApplicationrequest": {
      "title": "Add ApplicationRequest",
      "example": {
        "application": {
          "AppID": "{{AppID}}",
          "Description": "Testing DevOps Deployments with CyberArk",
          "Location": "/Applications",
          "AccessPermittedFrom": 0,
          "AccessPermittedTo": 23,
          "ExpirationDate": "",
          "Disabled": "No",
          "BusinessOwnerFName": "John",
          "BusinessOwnerLName": "Doe",
          "BusinessOwnerEmail": "John.Doe@CyberArk.com",
          "BusinessOwnerPhone": "555-555-1212"
        }
      },
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application9"
        }
      },
      "required": [
        "application"
      ]
    },
    "Application9": {
      "title": "Application9",
      "example": {
        "AppID": "{{AppID}}",
        "Description": "Testing DevOps Deployments with CyberArk",
        "Location": "/Applications",
        "AccessPermittedFrom": 0,
        "AccessPermittedTo": 23,
        "ExpirationDate": "",
        "Disabled": "No",
        "BusinessOwnerFName": "John",
        "BusinessOwnerLName": "Doe",
        "BusinessOwnerEmail": "John.Doe@CyberArk.com",
        "BusinessOwnerPhone": "555-555-1212"
      },
      "type": "object",
      "properties": {
        "AppID": {
          "description": "",
          "example": "{{AppID}}",
          "type": "string"
        },
        "Description": {
          "description": "",
          "example": "Testing DevOps Deployments with CyberArk",
          "type": "string"
        },
        "Location": {
          "description": "",
          "example": "/Applications",
          "type": "string"
        },
        "AccessPermittedFrom": {
          "description": "",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "AccessPermittedTo": {
          "description": "",
          "example": 23,
          "type": "integer",
          "format": "int32"
        },
        "ExpirationDate": {
          "description": "",
          "type": "string"
        },
        "Disabled": {
          "description": "",
          "example": "No",
          "type": "string"
        },
        "BusinessOwnerFName": {
          "description": "",
          "example": "John",
          "type": "string"
        },
        "BusinessOwnerLName": {
          "description": "",
          "example": "Doe",
          "type": "string"
        },
        "BusinessOwnerEmail": {
          "description": "",
          "example": "John.Doe@CyberArk.com",
          "type": "string"
        },
        "BusinessOwnerPhone": {
          "description": "",
          "example": "555-555-1212",
          "type": "string"
        }
      },
      "required": [
        "AppID",
        "Description",
        "Location",
        "AccessPermittedFrom",
        "AccessPermittedTo",
        "ExpirationDate",
        "Disabled",
        "BusinessOwnerFName",
        "BusinessOwnerLName",
        "BusinessOwnerEmail",
        "BusinessOwnerPhone"
      ]
    },
    "Cyberark[v9.0+]/ldap[v9.7+]/radius[v9.7+]Logonrequest": {
      "title": "CyberArk [v9.0+]/LDAP [v9.7+]/Radius [v9.7+] LogonRequest",
      "example": {
        "username": "{{apiUsername}}",
        "password": "{{apiPassword}}",
        "useRadiusAuthentication": "false",
        "connectionNumber": "1"
      },
      "type": "object",
      "properties": {
        "username": {
          "description": "",
          "example": "{{apiUsername}}",
          "type": "string"
        },
        "password": {
          "description": "",
          "example": "{{apiPassword}}",
          "type": "string"
        },
        "useRadiusAuthentication": {
          "description": "",
          "example": "false",
          "type": "string"
        },
        "connectionNumber": {
          "description": "",
          "example": "1",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password",
        "useRadiusAuthentication",
        "connectionNumber"
      ]
    },
    "200Ok11": {
      "title": "200 OK11",
      "example": {
        "CyberArkLogonResult": "AAEAAAD/////AQAAAAAAAAAMAgAAAFhDeWJlckFyay5TZXJ2aWNlcy5XZWIsIFZlcnNpb249OC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj00MGJlMWRiYzg3MTg2NzBmBQEAAAAoQ3liZXJBcmsuU2VydmljZXMuV2ViLlNlc3Npb25JZGVudGlmaWVycwQAAAAFVG9rZW4ESW5mbwlTZXNzaW9uSWQEVHlwZQEBAQECAAAABgMAAAAQMzYyNTkyRUY2ODhCRTA4QgYEAAAAUDAwMDAwMDAyOTQxQTVFMjA5OUY2NjU3MzY5MUQxM0VENThCOTdCNDVFNUM0RDBCMzEzNzNDNjZGRDIwOUU5NkE0QjM0MjdDMzAwMDAwMDAwBgUAAAAkMzFhYzg3Y2EtNzkzMS00MWY0LWFkZTctMTRlYTdiZmQzYzA0BgYAAAAACw=="
      },
      "type": "object",
      "properties": {
        "CyberArkLogonResult": {
          "description": "",
          "example": "AAEAAAD/////AQAAAAAAAAAMAgAAAFhDeWJlckFyay5TZXJ2aWNlcy5XZWIsIFZlcnNpb249OC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj00MGJlMWRiYzg3MTg2NzBmBQEAAAAoQ3liZXJBcmsuU2VydmljZXMuV2ViLlNlc3Npb25JZGVudGlmaWVycwQAAAAFVG9rZW4ESW5mbwlTZXNzaW9uSWQEVHlwZQEBAQECAAAABgMAAAAQMzYyNTkyRUY2ODhCRTA4QgYEAAAAUDAwMDAwMDAyOTQxQTVFMjA5OUY2NjU3MzY5MUQxM0VENThCOTdCNDVFNUM0RDBCMzEzNzNDNjZGRDIwOUU5NkE0QjM0MjdDMzAwMDAwMDAwBgUAAAAkMzFhYzg3Y2EtNzkzMS00MWY0LWFkZTctMTRlYTdiZmQzYzA0BgYAAAAACw==",
          "type": "string"
        }
      },
      "required": [
        "CyberArkLogonResult"
      ]
    },
    "Ssh  add a public ssh key [v9.6+]request": {
      "title": "SSH - Add a Public SSH Key [v9.6+]Request",
      "example": {
        "PublicSSHKey": "<public-key>"
      },
      "type": "object",
      "properties": {
        "PublicSSHKey": {
          "description": "",
          "example": "<public-key>",
          "type": "string"
        }
      },
      "required": [
        "PublicSSHKey"
      ]
    },
    "Appap004e  password object matching query was not found": {
      "title": "APPAP004E - Password object matching query was not found",
      "example": {
        "ErrorCode": "APPAP004E",
        "ErrorMsg": "Password object matching query [Folder=Root;Object=Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST;Safe=T-APP-CYBR-RESTAPI] was not found (Diagnostic Info: 9). Please check that there is a password object that answers your query in the Vault and that both the Provider and the application user have the appropriate permissions needed in order to use the password."
      },
      "type": "object",
      "properties": {
        "ErrorCode": {
          "description": "",
          "example": "APPAP004E",
          "type": "string"
        },
        "ErrorMsg": {
          "description": "",
          "example": "Password object matching query [Folder=Root;Object=Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST;Safe=T-APP-CYBR-RESTAPI] was not found (Diagnostic Info: 9). Please check that there is a password object that answers your query in the Vault and that both the Provider and the application user have the appropriate permissions needed in order to use the password.",
          "type": "string"
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMsg"
      ]
    },
    "200Ok14": {
      "title": "200 OK14",
      "example": {
        "Content": "Cyberark1",
        "CreationMethod": "PVWA",
        "Address": "joe-garcia.local",
        "Safe": "T-APP-CYBR-RESTAPI",
        "UserName": "Svc_CyberArkREST",
        "Name": "Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST",
        "LogonDomain": "JOE-GARCIA",
        "PolicyID": "WinDomain",
        "DeviceType": "Operating System",
        "Folder": "Root",
        "PasswordChangeInProcess": "False"
      },
      "type": "object",
      "properties": {
        "Content": {
          "description": "",
          "example": "Cyberark1",
          "type": "string"
        },
        "CreationMethod": {
          "description": "",
          "example": "PVWA",
          "type": "string"
        },
        "Address": {
          "description": "",
          "example": "joe-garcia.local",
          "type": "string"
        },
        "Safe": {
          "description": "",
          "example": "T-APP-CYBR-RESTAPI",
          "type": "string"
        },
        "UserName": {
          "description": "",
          "example": "Svc_CyberArkREST",
          "type": "string"
        },
        "Name": {
          "description": "",
          "example": "Operating System-WinDomain-joe-garcia.local-Svc_CyberArkREST",
          "type": "string"
        },
        "LogonDomain": {
          "description": "",
          "example": "JOE-GARCIA",
          "type": "string"
        },
        "PolicyID": {
          "description": "",
          "example": "WinDomain",
          "type": "string"
        },
        "DeviceType": {
          "description": "",
          "example": "Operating System",
          "type": "string"
        },
        "Folder": {
          "description": "",
          "example": "Root",
          "type": "string"
        },
        "PasswordChangeInProcess": {
          "description": "",
          "example": "False",
          "type": "string"
        }
      },
      "required": [
        "Content",
        "CreationMethod",
        "Address",
        "Safe",
        "UserName",
        "Name",
        "LogonDomain",
        "PolicyID",
        "DeviceType",
        "Folder",
        "PasswordChangeInProcess"
      ]
    },
    "ConfirmRequest[v9.10+]request": {
      "title": "Confirm Request [v9.10+]Request",
      "example": {
        "Reason": "Automatically accepted via CyberArk Web Services on 1522498819"
      },
      "type": "object",
      "properties": {
        "Reason": {
          "description": "",
          "example": "Automatically accepted via CyberArk Web Services on 1522498819",
          "type": "string"
        }
      },
      "required": [
        "Reason"
      ]
    },
    "RejectRequest[v9.10+]request": {
      "title": "Reject Request [v9.10+]Request",
      "example": {
        "Reason": "Rejected automatically by CyberArk Web Services on 1522498819"
      },
      "type": "object",
      "properties": {
        "Reason": {
          "description": "",
          "example": "Rejected automatically by CyberArk Web Services on 1522498819",
          "type": "string"
        }
      },
      "required": [
        "Reason"
      ]
    },
    "ConnectThroughPsm[v9.10+]request": {
      "title": "Connect Through PSM [v9.10+]Request",
      "example": {
        "Reason": "Automatically connected via CyberArk Web Services on 1522498819",
        "TicketingSystemName": "ServiceNow",
        "TicketId": "INC123456",
        "ConnectionComponent": "PSM-RDP",
        "ConnectionParams": {
          "LogonDomain": {
            "Value": "cyberark.local",
            "ShouldSave": "true"
          },
          "AllowMappingLocalDrives": {
            "Value": "Yes",
            "ShouldSave": "false"
          }
        }
      },
      "type": "object",
      "properties": {
        "Reason": {
          "description": "",
          "example": "Automatically connected via CyberArk Web Services on 1522498819",
          "type": "string"
        },
        "TicketingSystemName": {
          "description": "",
          "example": "ServiceNow",
          "type": "string"
        },
        "TicketId": {
          "description": "",
          "example": "INC123456",
          "type": "string"
        },
        "ConnectionComponent": {
          "description": "",
          "example": "PSM-RDP",
          "type": "string"
        },
        "ConnectionParams": {
          "$ref": "#/definitions/ConnectionParams"
        }
      },
      "required": [
        "Reason",
        "TicketingSystemName",
        "TicketId",
        "ConnectionComponent",
        "ConnectionParams"
      ]
    },
    "ConnectionParams": {
      "title": "ConnectionParams",
      "example": {
        "LogonDomain": {
          "Value": "cyberark.local",
          "ShouldSave": "true"
        },
        "AllowMappingLocalDrives": {
          "Value": "Yes",
          "ShouldSave": "false"
        }
      },
      "type": "object",
      "properties": {
        "LogonDomain": {
          "$ref": "#/definitions/LogonDomain"
        },
        "AllowMappingLocalDrives": {
          "$ref": "#/definitions/AllowMappingLocalDrives"
        }
      },
      "required": [
        "LogonDomain",
        "AllowMappingLocalDrives"
      ]
    },
    "LogonDomain": {
      "title": "LogonDomain",
      "example": {
        "Value": "cyberark.local",
        "ShouldSave": "true"
      },
      "type": "object",
      "properties": {
        "Value": {
          "description": "",
          "example": "cyberark.local",
          "type": "string"
        },
        "ShouldSave": {
          "description": "",
          "example": "true",
          "type": "string"
        }
      },
      "required": [
        "Value",
        "ShouldSave"
      ]
    },
    "AllowMappingLocalDrives": {
      "title": "AllowMappingLocalDrives",
      "example": {
        "Value": "Yes",
        "ShouldSave": "false"
      },
      "type": "object",
      "properties": {
        "Value": {
          "description": "",
          "example": "Yes",
          "type": "string"
        },
        "ShouldSave": {
          "description": "",
          "example": "false",
          "type": "string"
        }
      },
      "required": [
        "Value",
        "ShouldSave"
      ]
    },
    "AddAccount[v9.0+]request": {
      "title": "Add Account [v9.0+]Request",
      "example": {
        "account": {
          "safe": "{{Safe}}",
          "platformID": "WinDomain",
          "address": "{{Address}}",
          "accountName": "",
          "password": "Password123",
          "username": "{{UserName}}",
          "disableAutoMgmt": "false",
          "disableAutoMgmtReason": "N/A",
          "groupName": "",
          "groupPlatformID": "",
          "properties": [
            {
              "Key": "Port",
              "Value": "<port>"
            },
            {
              "Key": "ParamName",
              "Value": "Parameter value"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        }
      },
      "required": [
        "account"
      ]
    },
    "Account": {
      "title": "Account",
      "example": {
        "safe": "{{Safe}}",
        "platformID": "WinDomain",
        "address": "{{Address}}",
        "accountName": "",
        "password": "Password123",
        "username": "{{UserName}}",
        "disableAutoMgmt": "false",
        "disableAutoMgmtReason": "N/A",
        "groupName": "",
        "groupPlatformID": "",
        "properties": [
          {
            "Key": "Port",
            "Value": "<port>"
          },
          {
            "Key": "ParamName",
            "Value": "Parameter value"
          }
        ]
      },
      "type": "object",
      "properties": {
        "safe": {
          "description": "",
          "example": "{{Safe}}",
          "type": "string"
        },
        "platformID": {
          "description": "",
          "example": "WinDomain",
          "type": "string"
        },
        "address": {
          "description": "",
          "example": "{{Address}}",
          "type": "string"
        },
        "accountName": {
          "description": "",
          "type": "string"
        },
        "password": {
          "description": "",
          "example": "Password123",
          "type": "string"
        },
        "username": {
          "description": "",
          "example": "{{UserName}}",
          "type": "string"
        },
        "disableAutoMgmt": {
          "description": "",
          "example": "false",
          "type": "string"
        },
        "disableAutoMgmtReason": {
          "description": "",
          "example": "N/A",
          "type": "string"
        },
        "groupName": {
          "description": "",
          "type": "string"
        },
        "groupPlatformID": {
          "description": "",
          "type": "string"
        },
        "properties": {
          "description": "",
          "example": [
            {
              "Key": "Port",
              "Value": "<port>"
            },
            {
              "Key": "ParamName",
              "Value": "Parameter value"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "safe",
        "platformID",
        "address",
        "accountName",
        "password",
        "username",
        "disableAutoMgmt",
        "disableAutoMgmtReason",
        "groupName",
        "groupPlatformID",
        "properties"
      ]
    },
    "Property": {
      "title": "Property",
      "example": {
        "Key": "Port",
        "Value": "<port>"
      },
      "type": "object",
      "properties": {
        "Key": {
          "description": "",
          "example": "Port",
          "type": "string"
        },
        "Value": {
          "description": "",
          "example": "<port>",
          "type": "string"
        }
      },
      "required": [
        "Key",
        "Value"
      ]
    },
    "AddPendingAccount[v9.7+]request": {
      "title": "Add Pending Account [v9.7+]Request",
      "example": {
        "pendingAccount": {
          "UserName": "{{UserName}}",
          "Address": "{{Address}}",
          "AccountDiscoveryDate": "2016-12-19T08:19:03Z",
          "AccountEnabled": "Disabled",
          "AccountOSGroups": "Domain Admins",
          "AccountType": "Domain",
          "Domain": "joe-garcia.local",
          "PasswordNeverExpires": "false",
          "OSVersion": "Windows Server 2012 R2",
          "OU": "Users",
          "AccountCategory": "Privileged",
          "UserDisplayName": "CA_EPVTestUser",
          "AccountDescription": "CyberArk EPV Test User for Web Services",
          "GID": "",
          "UID": "",
          "OSType": "Windows",
          "DiscoveryPlatformType": "Windows Domain Accounts",
          "MachineOSFamily": "server",
          "LastLogonDate": "",
          "LastPasswordSetDate": "2016-12-19T08:19:03Z",
          "AccountExpirationDate": "",
          "AccountCategoryCriteria": "<criteria>"
        }
      },
      "type": "object",
      "properties": {
        "pendingAccount": {
          "$ref": "#/definitions/PendingAccount"
        }
      },
      "required": [
        "pendingAccount"
      ]
    },
    "PendingAccount": {
      "title": "PendingAccount",
      "example": {
        "UserName": "{{UserName}}",
        "Address": "{{Address}}",
        "AccountDiscoveryDate": "2016-12-19T08:19:03Z",
        "AccountEnabled": "Disabled",
        "AccountOSGroups": "Domain Admins",
        "AccountType": "Domain",
        "Domain": "joe-garcia.local",
        "PasswordNeverExpires": "false",
        "OSVersion": "Windows Server 2012 R2",
        "OU": "Users",
        "AccountCategory": "Privileged",
        "UserDisplayName": "CA_EPVTestUser",
        "AccountDescription": "CyberArk EPV Test User for Web Services",
        "GID": "",
        "UID": "",
        "OSType": "Windows",
        "DiscoveryPlatformType": "Windows Domain Accounts",
        "MachineOSFamily": "server",
        "LastLogonDate": "",
        "LastPasswordSetDate": "2016-12-19T08:19:03Z",
        "AccountExpirationDate": "",
        "AccountCategoryCriteria": "<criteria>"
      },
      "type": "object",
      "properties": {
        "UserName": {
          "description": "",
          "example": "{{UserName}}",
          "type": "string"
        },
        "Address": {
          "description": "",
          "example": "{{Address}}",
          "type": "string"
        },
        "AccountDiscoveryDate": {
          "description": "",
          "example": "12/19/2016 8:19:03 AM",
          "type": "string"
        },
        "AccountEnabled": {
          "description": "",
          "example": "Disabled",
          "type": "string"
        },
        "AccountOSGroups": {
          "description": "",
          "example": "Domain Admins",
          "type": "string"
        },
        "AccountType": {
          "description": "",
          "example": "Domain",
          "type": "string"
        },
        "Domain": {
          "description": "",
          "example": "joe-garcia.local",
          "type": "string"
        },
        "PasswordNeverExpires": {
          "description": "",
          "example": "false",
          "type": "string"
        },
        "OSVersion": {
          "description": "",
          "example": "Windows Server 2012 R2",
          "type": "string"
        },
        "OU": {
          "description": "",
          "example": "Users",
          "type": "string"
        },
        "AccountCategory": {
          "description": "",
          "example": "Privileged",
          "type": "string"
        },
        "UserDisplayName": {
          "description": "",
          "example": "CA_EPVTestUser",
          "type": "string"
        },
        "AccountDescription": {
          "description": "",
          "example": "CyberArk EPV Test User for Web Services",
          "type": "string"
        },
        "GID": {
          "description": "",
          "type": "string"
        },
        "UID": {
          "description": "",
          "type": "string"
        },
        "OSType": {
          "description": "",
          "example": "Windows",
          "type": "string"
        },
        "DiscoveryPlatformType": {
          "description": "",
          "example": "Windows Domain Accounts",
          "type": "string"
        },
        "MachineOSFamily": {
          "description": "",
          "example": "server",
          "type": "string"
        },
        "LastLogonDate": {
          "description": "",
          "type": "string"
        },
        "LastPasswordSetDate": {
          "description": "",
          "example": "12/19/2016 8:19:03 AM",
          "type": "string"
        },
        "AccountExpirationDate": {
          "description": "",
          "type": "string"
        },
        "AccountCategoryCriteria": {
          "description": "",
          "example": "<criteria>",
          "type": "string"
        }
      },
      "required": [
        "UserName",
        "Address",
        "AccountDiscoveryDate",
        "AccountEnabled",
        "AccountOSGroups",
        "AccountType",
        "Domain",
        "PasswordNeverExpires",
        "OSVersion",
        "OU",
        "AccountCategory",
        "UserDisplayName",
        "AccountDescription",
        "GID",
        "UID",
        "OSType",
        "DiscoveryPlatformType",
        "MachineOSFamily",
        "LastLogonDate",
        "LastPasswordSetDate",
        "AccountExpirationDate",
        "AccountCategoryCriteria"
      ]
    },
    "GetPasswordValue[v10]request": {
      "title": "Get Password Value [v10]Request",
      "example": {
        "Reason": "Automatically retrieved password by CyberArk Web Services on 1522498819",
        "TicketingSystemName": "ServiceNow",
        "TicketId": "INC123456",
        "Version": "1",
        "ActionType": "Connect",
        "IsUse": "false",
        "Machine": "client.cyberark.local"
      },
      "type": "object",
      "properties": {
        "Reason": {
          "description": "",
          "example": "Automatically retrieved password by CyberArk Web Services on 1522498819",
          "type": "string"
        },
        "TicketingSystemName": {
          "description": "",
          "example": "ServiceNow",
          "type": "string"
        },
        "TicketId": {
          "description": "",
          "example": "INC123456",
          "type": "string"
        },
        "Version": {
          "description": "",
          "example": "1",
          "type": "string"
        },
        "ActionType": {
          "description": "",
          "example": "Connect",
          "type": "string"
        },
        "IsUse": {
          "description": "",
          "example": "false",
          "type": "string"
        },
        "Machine": {
          "description": "",
          "example": "client.cyberark.local",
          "type": "string"
        }
      },
      "required": [
        "Reason",
        "TicketingSystemName",
        "TicketId",
        "Version",
        "ActionType",
        "IsUse",
        "Machine"
      ]
    },
    "ChangeCredentials[v9.3+]request": {
      "title": "Change Credentials [v9.3+]Request",
      "example": {
        "ChangeCredsForGroup": "No"
      },
      "type": "object",
      "properties": {
        "ChangeCredsForGroup": {
          "description": "",
          "example": "No",
          "type": "string"
        }
      },
      "required": [
        "ChangeCredsForGroup"
      ]
    },
    "ChangeCredentialsImmediately[v9.10+]request": {
      "title": "Change Credentials Immediately [v9.10+]Request",
      "example": {
        "ChangeEntireGroup": "true"
      },
      "type": "object",
      "properties": {
        "ChangeEntireGroup": {
          "description": "",
          "example": "true",
          "type": "string"
        }
      },
      "required": [
        "ChangeEntireGroup"
      ]
    },
    "ChangeCredentialsAndSetNextPassword[v10]request": {
      "title": "Change Credentials and Set Next Password [v10]Request",
      "example": {
        "ChangeImmediately": "true",
        "NewCredentials": "Cyberark1"
      },
      "type": "object",
      "properties": {
        "ChangeImmediately": {
          "description": "",
          "example": "true",
          "type": "string"
        },
        "NewCredentials": {
          "description": "",
          "example": "Cyberark1",
          "type": "string"
        }
      },
      "required": [
        "ChangeImmediately",
        "NewCredentials"
      ]
    },
    "ChangeCredentialsInTheVault[v10]request": {
      "title": "Change Credentials in the Vault [v10]Request",
      "example": {
        "ChangeCredsForGroup": "true",
        "AutoGenerate": "true",
        "NewCredentials": ""
      },
      "type": "object",
      "properties": {
        "ChangeCredsForGroup": {
          "description": "",
          "example": "true",
          "type": "string"
        },
        "AutoGenerate": {
          "description": "",
          "example": "true",
          "type": "string"
        },
        "NewCredentials": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "ChangeCredsForGroup",
        "AutoGenerate",
        "NewCredentials"
      ]
    },
    "200Ok31": {
      "title": "200 OK31",
      "example": {
        "Count": 1,
        "accounts": [
          {
            "AccountID": "41_4",
            "InternalProperties": [
              {
                "Key": "CPMStatus",
                "Value": "success"
              },
              {
                "Key": "CreationMethod",
                "Value": "PVWA"
              },
              {
                "Key": "RetriesCount",
                "Value": "-1"
              },
              {
                "Key": "LastTask",
                "Value": "VerifyTask"
              }
            ],
            "Properties": [
              {
                "Key": "Safe",
                "Value": "T-APP-CYBR-RESTAPI"
              },
              {
                "Key": "Folder",
                "Value": "Root"
              },
              {
                "Key": "Name",
                "Value": "Operating System-WindowsDomainAccount-cyberark.local-test.user0001"
              },
              {
                "Key": "UserName",
                "Value": "test.user0001"
              },
              {
                "Key": "PolicyID",
                "Value": "WindowsDomainAccount"
              },
              {
                "Key": "LogonDomain",
                "Value": "CYBERARK"
              },
              {
                "Key": "LastSuccessVerification",
                "Value": "1496683713"
              },
              {
                "Key": "Address",
                "Value": "cyberark.local"
              },
              {
                "Key": "DeviceType",
                "Value": "Operating System"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "Count": {
          "description": "",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "accounts": {
          "description": "",
          "example": [
            {
              "AccountID": "41_4",
              "InternalProperties": [
                {
                  "Key": "CPMStatus",
                  "Value": "success"
                },
                {
                  "Key": "CreationMethod",
                  "Value": "PVWA"
                },
                {
                  "Key": "RetriesCount",
                  "Value": "-1"
                },
                {
                  "Key": "LastTask",
                  "Value": "VerifyTask"
                }
              ],
              "Properties": [
                {
                  "Key": "Safe",
                  "Value": "T-APP-CYBR-RESTAPI"
                },
                {
                  "Key": "Folder",
                  "Value": "Root"
                },
                {
                  "Key": "Name",
                  "Value": "Operating System-WindowsDomainAccount-cyberark.local-test.user0001"
                },
                {
                  "Key": "UserName",
                  "Value": "test.user0001"
                },
                {
                  "Key": "PolicyID",
                  "Value": "WindowsDomainAccount"
                },
                {
                  "Key": "LogonDomain",
                  "Value": "CYBERARK"
                },
                {
                  "Key": "LastSuccessVerification",
                  "Value": "1496683713"
                },
                {
                  "Key": "Address",
                  "Value": "cyberark.local"
                },
                {
                  "Key": "DeviceType",
                  "Value": "Operating System"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account32"
          }
        }
      },
      "required": [
        "Count",
        "accounts"
      ]
    },
    "Account32": {
      "title": "Account32",
      "example": {
        "AccountID": "41_4",
        "InternalProperties": [
          {
            "Key": "CPMStatus",
            "Value": "success"
          },
          {
            "Key": "CreationMethod",
            "Value": "PVWA"
          },
          {
            "Key": "RetriesCount",
            "Value": "-1"
          },
          {
            "Key": "LastTask",
            "Value": "VerifyTask"
          }
        ],
        "Properties": [
          {
            "Key": "Safe",
            "Value": "T-APP-CYBR-RESTAPI"
          },
          {
            "Key": "Folder",
            "Value": "Root"
          },
          {
            "Key": "Name",
            "Value": "Operating System-WindowsDomainAccount-cyberark.local-test.user0001"
          },
          {
            "Key": "UserName",
            "Value": "test.user0001"
          },
          {
            "Key": "PolicyID",
            "Value": "WindowsDomainAccount"
          },
          {
            "Key": "LogonDomain",
            "Value": "CYBERARK"
          },
          {
            "Key": "LastSuccessVerification",
            "Value": "1496683713"
          },
          {
            "Key": "Address",
            "Value": "cyberark.local"
          },
          {
            "Key": "DeviceType",
            "Value": "Operating System"
          }
        ]
      },
      "type": "object",
      "properties": {
        "AccountID": {
          "description": "",
          "example": "41_4",
          "type": "string"
        },
        "InternalProperties": {
          "description": "",
          "example": [
            {
              "Key": "CPMStatus",
              "Value": "success"
            },
            {
              "Key": "CreationMethod",
              "Value": "PVWA"
            },
            {
              "Key": "RetriesCount",
              "Value": "-1"
            },
            {
              "Key": "LastTask",
              "Value": "VerifyTask"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalProperty"
          }
        },
        "Properties": {
          "description": "",
          "example": [
            {
              "Key": "Safe",
              "Value": "T-APP-CYBR-RESTAPI"
            },
            {
              "Key": "Folder",
              "Value": "Root"
            },
            {
              "Key": "Name",
              "Value": "Operating System-WindowsDomainAccount-cyberark.local-test.user0001"
            },
            {
              "Key": "UserName",
              "Value": "test.user0001"
            },
            {
              "Key": "PolicyID",
              "Value": "WindowsDomainAccount"
            },
            {
              "Key": "LogonDomain",
              "Value": "CYBERARK"
            },
            {
              "Key": "LastSuccessVerification",
              "Value": "1496683713"
            },
            {
              "Key": "Address",
              "Value": "cyberark.local"
            },
            {
              "Key": "DeviceType",
              "Value": "Operating System"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "AccountID",
        "InternalProperties",
        "Properties"
      ]
    },
    "InternalProperty": {
      "title": "InternalProperty",
      "example": {
        "Key": "CPMStatus",
        "Value": "success"
      },
      "type": "object",
      "properties": {
        "Key": {
          "description": "",
          "example": "CPMStatus",
          "type": "string"
        },
        "Value": {
          "description": "",
          "example": "success",
          "type": "string"
        }
      },
      "required": [
        "Key",
        "Value"
      ]
    },
    "UpdateAccountDetails[v9.5+]request": {
      "title": "Update Account Details [v9.5+]Request",
      "example": {
        "Accounts": {
          "Folder": "{{Folder}}",
          "AccountName": "{{ObjectName}}",
          "DeviceType": "Operating System",
          "PlatformID": "WinDomain",
          "Address": "{{Address}}",
          "UserName": "{{UserName}}",
          "GroupName": "",
          "GroupPlatformID": "",
          "Properties": [
            {
              "Key": "Notes",
              "Value": "Test User for CyberArk"
            },
            {
              "Key": "Ticket Number",
              "Value": "CHG100001"
            },
            {
              "Key": "ParamName",
              "Value": "Parameter value"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Accounts": {
          "$ref": "#/definitions/Accounts"
        }
      },
      "required": [
        "Accounts"
      ]
    },
    "Accounts": {
      "title": "Accounts",
      "example": {
        "Folder": "{{Folder}}",
        "AccountName": "{{ObjectName}}",
        "DeviceType": "Operating System",
        "PlatformID": "WinDomain",
        "Address": "{{Address}}",
        "UserName": "{{UserName}}",
        "GroupName": "",
        "GroupPlatformID": "",
        "Properties": [
          {
            "Key": "Notes",
            "Value": "Test User for CyberArk"
          },
          {
            "Key": "Ticket Number",
            "Value": "CHG100001"
          },
          {
            "Key": "ParamName",
            "Value": "Parameter value"
          }
        ]
      },
      "type": "object",
      "properties": {
        "Folder": {
          "description": "",
          "example": "{{Folder}}",
          "type": "string"
        },
        "AccountName": {
          "description": "",
          "example": "{{ObjectName}}",
          "type": "string"
        },
        "DeviceType": {
          "description": "",
          "example": "Operating System",
          "type": "string"
        },
        "PlatformID": {
          "description": "",
          "example": "WinDomain",
          "type": "string"
        },
        "Address": {
          "description": "",
          "example": "{{Address}}",
          "type": "string"
        },
        "UserName": {
          "description": "",
          "example": "{{UserName}}",
          "type": "string"
        },
        "GroupName": {
          "description": "",
          "type": "string"
        },
        "GroupPlatformID": {
          "description": "",
          "type": "string"
        },
        "Properties": {
          "description": "",
          "example": [
            {
              "Key": "Notes",
              "Value": "Test User for CyberArk"
            },
            {
              "Key": "Ticket Number",
              "Value": "CHG100001"
            },
            {
              "Key": "ParamName",
              "Value": "Parameter value"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "Folder",
        "AccountName",
        "DeviceType",
        "PlatformID",
        "Address",
        "UserName",
        "GroupName",
        "GroupPlatformID",
        "Properties"
      ]
    },
    "CreateARequest[v9.10+]request": {
      "title": "Create a Request [v9.10+]Request",
      "example": {
        "AccountID": "{{AccountID}}",
        "Reason": "Access requested via CyberArk Web Services",
        "TicketingSystemName": "ServiceNow"
      },
      "type": "object",
      "properties": {
        "AccountID": {
          "description": "",
          "example": "{{AccountID}}",
          "type": "string"
        },
        "Reason": {
          "description": "",
          "example": "Access requested via CyberArk Web Services",
          "type": "string"
        },
        "TicketingSystemName": {
          "description": "",
          "example": "ServiceNow",
          "type": "string"
        }
      },
      "required": [
        "AccountID",
        "Reason",
        "TicketingSystemName"
      ]
    },
    "AddOnboardingRulerequest": {
      "title": "Add Onboarding RuleRequest",
      "example": {
        "DecisionPlatformId": "WinLocalAccount",
        "DecisionSafeName": "{{Safe}}",
        "IsAdminUIDFilter": "true",
        "MachineTypeFilter": "Server",
        "SystemTypeFilter": "Windows",
        "UserNameFilter": ""
      },
      "type": "object",
      "properties": {
        "DecisionPlatformId": {
          "description": "",
          "example": "WinLocalAccount",
          "type": "string"
        },
        "DecisionSafeName": {
          "description": "",
          "example": "{{Safe}}",
          "type": "string"
        },
        "IsAdminUIDFilter": {
          "description": "",
          "example": "true",
          "type": "string"
        },
        "MachineTypeFilter": {
          "description": "",
          "example": "Server",
          "type": "string"
        },
        "SystemTypeFilter": {
          "description": "",
          "example": "Windows",
          "type": "string"
        },
        "UserNameFilter": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "DecisionPlatformId",
        "DecisionSafeName",
        "IsAdminUIDFilter",
        "MachineTypeFilter",
        "SystemTypeFilter",
        "UserNameFilter"
      ]
    },
    "AddPolicy/aclrequest": {
      "title": "Add Policy/ACLRequest",
      "example": {
        "Command": "/bin/sh",
        "CommandGroup": false,
        "PermissionType": "Deny",
        "Restrictions": "",
        "UserName": "{{ACLUserName}}"
      },
      "type": "object",
      "properties": {
        "Command": {
          "description": "",
          "example": "/bin/sh",
          "type": "string"
        },
        "CommandGroup": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "PermissionType": {
          "description": "",
          "example": "Deny",
          "type": "string"
        },
        "Restrictions": {
          "description": "",
          "type": "string"
        },
        "UserName": {
          "description": "",
          "example": "{{ACLUserName}}",
          "type": "string"
        }
      },
      "required": [
        "Command",
        "CommandGroup",
        "PermissionType",
        "Restrictions",
        "UserName"
      ]
    },
    "AddSafe[v9.2+]request": {
      "title": "Add Safe [v9.2+]Request",
      "example": {
        "safe": {
          "SafeName": "{{Safe}}",
          "Description": "Test, Application, CyberArk, API",
          "OLACEnabled": false,
          "ManagingCPM": "PasswordManager",
          "NumberofVersionsRetention": 5,
          "NumberofDaysRetention": 7
        }
      },
      "type": "object",
      "properties": {
        "safe": {
          "$ref": "#/definitions/Safe"
        }
      },
      "required": [
        "safe"
      ]
    },
    "Safe": {
      "title": "Safe",
      "example": {
        "SafeName": "{{Safe}}",
        "Description": "Test, Application, CyberArk, API",
        "OLACEnabled": false,
        "ManagingCPM": "PasswordManager",
        "NumberofVersionsRetention": 5,
        "NumberofDaysRetention": 7
      },
      "type": "object",
      "properties": {
        "SafeName": {
          "description": "",
          "example": "{{Safe}}",
          "type": "string"
        },
        "Description": {
          "description": "",
          "example": "Test, Application, CyberArk, API",
          "type": "string"
        },
        "OLACEnabled": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "ManagingCPM": {
          "description": "",
          "example": "PasswordManager",
          "type": "string"
        },
        "NumberofVersionsRetention": {
          "description": "",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "NumberofDaysRetention": {
          "description": "",
          "example": 7,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "SafeName",
        "Description",
        "OLACEnabled",
        "ManagingCPM",
        "NumberofVersionsRetention",
        "NumberofDaysRetention"
      ]
    },
    "UpdateSafe[v9.3+]request": {
      "title": "Update Safe [v9.3+]Request",
      "example": {
        "safe": {
          "SafeName": "{{Safe}}",
          "Description": "Test, Application, CyberArk, API, Update Safe Test",
          "OLACEnabled": false,
          "ManagingCPM": "PasswordManager",
          "NumberOfVersionsRetention": 5,
          "NumberOfDaysRetention": 7
        }
      },
      "type": "object",
      "properties": {
        "safe": {
          "$ref": "#/definitions/Safe44"
        }
      },
      "required": [
        "safe"
      ]
    },
    "Safe44": {
      "title": "Safe44",
      "example": {
        "SafeName": "{{Safe}}",
        "Description": "Test, Application, CyberArk, API, Update Safe Test",
        "OLACEnabled": false,
        "ManagingCPM": "PasswordManager",
        "NumberOfVersionsRetention": 5,
        "NumberOfDaysRetention": 7
      },
      "type": "object",
      "properties": {
        "SafeName": {
          "description": "",
          "example": "{{Safe}}",
          "type": "string"
        },
        "Description": {
          "description": "",
          "example": "Test, Application, CyberArk, API, Update Safe Test",
          "type": "string"
        },
        "OLACEnabled": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "ManagingCPM": {
          "description": "",
          "example": "PasswordManager",
          "type": "string"
        },
        "NumberOfVersionsRetention": {
          "description": "",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "NumberOfDaysRetention": {
          "description": "",
          "example": 7,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "SafeName",
        "Description",
        "OLACEnabled",
        "ManagingCPM",
        "NumberOfVersionsRetention",
        "NumberOfDaysRetention"
      ]
    },
    "AddSafeMember[v9.3+]request": {
      "title": "Add Safe Member [v9.3+]Request",
      "type": "object",
      "properties": {
        "member": {
          "$ref": "#/definitions/Member"
        }
      },
      "required": [
        "member"
      ]
    },
    "Member": {
      "title": "Member",
      "type": "object",
      "properties": {
        "MemberName": {
          "description": "",
          "example": "EPVUserTest",
          "type": "string"
        },
        "SearchIn": {
          "description": "",
          "example": "ActiveDirectory",
          "type": "string"
        },
        "MembershipExpirationDate": {
          "description": "",
          "type": "string"
        },
        "Permissions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "MemberName",
        "SearchIn",
        "MembershipExpirationDate",
        "Permissions"
      ]
    },
    "Permission": {
      "title": "Permission",
      "type": "object",
      "properties": {
        "Key": {
          "description": "",
          "example": "UseAccounts",
          "type": "string"
        },
        "Value": {
          "description": "",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "Key",
        "Value"
      ]
    },
    "UpdateSafeMember[v9.3+]request": {
      "title": "Update Safe Member [v9.3+]Request",
      "type": "object",
      "properties": {
        "member": {
          "$ref": "#/definitions/Member49"
        }
      },
      "required": [
        "member"
      ]
    },
    "Member49": {
      "title": "Member49",
      "type": "object",
      "properties": {
        "MembershipExpirationDate": {
          "description": "",
          "type": "string"
        },
        "Permissions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "MembershipExpirationDate",
        "Permissions"
      ]
    },
    "200Ok51": {
      "title": "200 OK51",
      "example": {
        "ApplicationName": "PasswordVault",
        "AuthenticationMethods": [
          {
            "Enabled": true,
            "Id": "windows"
          },
          {
            "Enabled": false,
            "Id": "pki"
          },
          {
            "Enabled": true,
            "Id": "cyberark"
          },
          {
            "Enabled": false,
            "Id": "oraclesso"
          },
          {
            "Enabled": false,
            "Id": "rsa"
          },
          {
            "Enabled": true,
            "Id": "radius"
          },
          {
            "Enabled": true,
            "Id": "ldap"
          },
          {
            "Enabled": false,
            "Id": "saml"
          }
        ],
        "ServerId": "e10b6fe6-1bea-11e7-8329-000c29ebeaed",
        "ServerName": "Vault"
      },
      "type": "object",
      "properties": {
        "ApplicationName": {
          "description": "",
          "example": "PasswordVault",
          "type": "string"
        },
        "AuthenticationMethods": {
          "description": "",
          "example": [
            {
              "Enabled": true,
              "Id": "windows"
            },
            {
              "Enabled": false,
              "Id": "pki"
            },
            {
              "Enabled": true,
              "Id": "cyberark"
            },
            {
              "Enabled": false,
              "Id": "oraclesso"
            },
            {
              "Enabled": false,
              "Id": "rsa"
            },
            {
              "Enabled": true,
              "Id": "radius"
            },
            {
              "Enabled": true,
              "Id": "ldap"
            },
            {
              "Enabled": false,
              "Id": "saml"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthenticationMethod"
          }
        },
        "ServerId": {
          "description": "",
          "example": "e10b6fe6-1bea-11e7-8329-000c29ebeaed",
          "type": "string"
        },
        "ServerName": {
          "description": "",
          "example": "Vault",
          "type": "string"
        }
      },
      "required": [
        "ApplicationName",
        "AuthenticationMethods",
        "ServerId",
        "ServerName"
      ]
    },
    "AuthenticationMethod": {
      "title": "AuthenticationMethod",
      "example": {
        "Enabled": true,
        "Id": "windows"
      },
      "type": "object",
      "properties": {
        "Enabled": {
          "description": "",
          "example": true,
          "type": "boolean"
        },
        "Id": {
          "description": "",
          "example": "windows",
          "type": "string"
        }
      },
      "required": [
        "Enabled",
        "Id"
      ]
    },
    "500InternalServerError": {
      "title": "500 Internal Server Error",
      "example": {
        "ErrorCode": "CAWS018E",
        "ErrorMessage": "Internal error occurred, contact your administrator."
      },
      "type": "object",
      "properties": {
        "ErrorCode": {
          "description": "",
          "example": "CAWS018E",
          "type": "string"
        },
        "ErrorMessage": {
          "description": "",
          "example": "Internal error occurred, contact your administrator.",
          "type": "string"
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMessage"
      ]
    },
    "403Forbidden(checkYourAuthorization/authentication)": {
      "title": "403 Forbidden (Check your authorization/authentication)",
      "example": {
        "ErrorCode": "CAIWS001E",
        "ErrorMessage": "Couldn't retrieve session token from request header."
      },
      "type": "object",
      "properties": {
        "ErrorCode": {
          "description": "",
          "example": "CAIWS001E",
          "type": "string"
        },
        "ErrorMessage": {
          "description": "",
          "example": "Couldn't retrieve session token from request header.",
          "type": "string"
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMessage"
      ]
    },
    "200Ok55": {
      "title": "200 OK55",
      "example": {
        "ExternalVersion": "9.9.0",
        "InternalVersion": "9.90.0.18",
        "ServerName": "Vault"
      },
      "type": "object",
      "properties": {
        "ExternalVersion": {
          "description": "",
          "example": "9.9.0",
          "type": "string"
        },
        "InternalVersion": {
          "description": "",
          "example": "9.90.0.18",
          "type": "string"
        },
        "ServerName": {
          "description": "",
          "example": "Vault",
          "type": "string"
        }
      },
      "required": [
        "ExternalVersion",
        "InternalVersion",
        "ServerName"
      ]
    },
    "AddUserrequest": {
      "title": "Add UserRequest",
      "example": {
        "UserName": "{{UserName}}",
        "InitialPassword": "Cyberark1",
        "Email": "EPVUserTest@cyberark.local",
        "FirstName": "REST API",
        "LastName": "EPVUserTest",
        "ChangePasswordOnTheNextLogon": false,
        "ExpiryDate": "yyyy-MM-dd",
        "UserTypeName": "EPVUser",
        "Disabled": true,
        "Location": "\\"
      },
      "type": "object",
      "properties": {
        "UserName": {
          "description": "",
          "example": "{{UserName}}",
          "type": "string"
        },
        "InitialPassword": {
          "description": "",
          "example": "Cyberark1",
          "type": "string"
        },
        "Email": {
          "description": "",
          "example": "EPVUserTest@cyberark.local",
          "type": "string"
        },
        "FirstName": {
          "description": "",
          "example": "REST API",
          "type": "string"
        },
        "LastName": {
          "description": "",
          "example": "EPVUserTest",
          "type": "string"
        },
        "ChangePasswordOnTheNextLogon": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "ExpiryDate": {
          "description": "",
          "example": "yyyy-MM-dd",
          "type": "string"
        },
        "UserTypeName": {
          "description": "",
          "example": "EPVUser",
          "type": "string"
        },
        "Disabled": {
          "description": "",
          "example": true,
          "type": "boolean"
        },
        "Location": {
          "description": "",
          "example": "\\",
          "type": "string"
        }
      },
      "required": [
        "UserName",
        "InitialPassword",
        "Email",
        "FirstName",
        "LastName",
        "ChangePasswordOnTheNextLogon",
        "ExpiryDate",
        "UserTypeName",
        "Disabled",
        "Location"
      ]
    },
    "UpdateUserrequest": {
      "title": "Update UserRequest",
      "example": {
        "NewPassword": "Password321",
        "Email": "John.Doe@CyberArk.com",
        "FirstName": "John",
        "LastName": "Doe",
        "ChangePasswordOnTheNextLogon": true,
        "ExpiryDate": "",
        "UserTypeName": "EPVUser",
        "Disabled": false,
        "Location": "\\"
      },
      "type": "object",
      "properties": {
        "NewPassword": {
          "description": "",
          "example": "Password321",
          "type": "string"
        },
        "Email": {
          "description": "",
          "example": "John.Doe@CyberArk.com",
          "type": "string"
        },
        "FirstName": {
          "description": "",
          "example": "John",
          "type": "string"
        },
        "LastName": {
          "description": "",
          "example": "Doe",
          "type": "string"
        },
        "ChangePasswordOnTheNextLogon": {
          "description": "",
          "example": true,
          "type": "boolean"
        },
        "ExpiryDate": {
          "description": "",
          "type": "string"
        },
        "UserTypeName": {
          "description": "",
          "example": "EPVUser",
          "type": "string"
        },
        "Disabled": {
          "description": "",
          "example": false,
          "type": "boolean"
        },
        "Location": {
          "description": "",
          "example": "\\",
          "type": "string"
        }
      },
      "required": [
        "NewPassword",
        "Email",
        "FirstName",
        "LastName",
        "ChangePasswordOnTheNextLogon",
        "ExpiryDate",
        "UserTypeName",
        "Disabled",
        "Location"
      ]
    },
    "ActivateUserrequest": {
      "title": "Activate UserRequest",
      "example": {
        "Suspended": "false"
      },
      "type": "object",
      "properties": {
        "Suspended": {
          "description": "",
          "example": "false",
          "type": "string"
        }
      },
      "required": [
        "Suspended"
      ]
    },
    "AddUserToGrouprequest": {
      "title": "Add User to GroupRequest",
      "example": {
        "UserName": "{{UserName}}"
      },
      "type": "object",
      "properties": {
        "UserName": {
          "description": "",
          "example": "{{UserName}}",
          "type": "string"
        }
      },
      "required": [
        "UserName"
      ]
    }
  }
}